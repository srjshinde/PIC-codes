

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 03 20:31:50 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISCbits	set	3988
    68  0000                     _INTCONbits	set	4082
    69  0000                     _OSCCONbits	set	4051
    70  0000                     _PORTD	set	3971
    71  0000                     _PORTCbits	set	3970
    72  0000                     _PORTBbits	set	3969
    73  0000                     _TRISBbits	set	3987
    74                           
    75                           	psect	smallconst
    76  000600                     __psmallconst:
    77                           	opt callstack 0
    78  000600  00                 	db	0
    79  000601                     STR_1:
    80  000601  50                 	db	80	;'P'
    81  000602  6C                 	db	108	;'l'
    82  000603  65                 	db	101	;'e'
    83  000604  61                 	db	97	;'a'
    84  000605  73                 	db	115	;'s'
    85  000606  65                 	db	101	;'e'
    86  000607  20                 	db	32
    87  000608  43                 	db	67	;'C'
    88  000609  6F                 	db	111	;'o'
    89  00060A  6E                 	db	110	;'n'
    90  00060B  6E                 	db	110	;'n'
    91  00060C  65                 	db	101	;'e'
    92  00060D  63                 	db	99	;'c'
    93  00060E  74                 	db	116	;'t'
    94  00060F  20                 	db	32
    95  000610  20                 	db	32
    96  000611  20                 	db	32
    97  000612  00                 	db	0
    98  000613                     STR_3:
    99  000613  20                 	db	32
   100  000614  20                 	db	32
   101  000615  20                 	db	32
   102  000616  20                 	db	32
   103  000617  20                 	db	32
   104  000618  20                 	db	32
   105  000619  20                 	db	32
   106  00061A  20                 	db	32
   107  00061B  20                 	db	32
   108  00061C  20                 	db	32
   109  00061D  20                 	db	32
   110  00061E  20                 	db	32
   111  00061F  20                 	db	32
   112  000620  20                 	db	32
   113  000621  20                 	db	32
   114  000622  20                 	db	32
   115  000623  00                 	db	0
   116  000624                     STR_2:
   117  000624  54                 	db	84	;'T'
   118  000625  65                 	db	101	;'e'
   119  000626  6D                 	db	109	;'m'
   120  000627  70                 	db	112	;'p'
   121  000628  2D                 	db	45
   122  000629  53                 	db	83	;'S'
   123  00062A  65                 	db	101	;'e'
   124  00062B  6E                 	db	110	;'n'
   125  00062C  73                 	db	115	;'s'
   126  00062D  65                 	db	101	;'e'
   127  00062E  20                 	db	32
   128  00062F  50                 	db	80	;'P'
   129  000630  72                 	db	114	;'r'
   130  000631  6F                 	db	111	;'o'
   131  000632  62                 	db	98	;'b'
   132  000633  65                 	db	101	;'e'
   133  000634  00                 	db	0
   134  000635                     STR_4:
   135  000635  44                 	db	68	;'D'
   136  000636  53                 	db	83	;'S'
   137  000637  31                 	db	49	;'1'
   138  000638  38                 	db	56	;'8'
   139  000639  42                 	db	66	;'B'
   140  00063A  32                 	db	50	;'2'
   141  00063B  30                 	db	48	;'0'
   142  00063C  20                 	db	32
   143  00063D  54                 	db	84	;'T'
   144  00063E  65                 	db	101	;'e'
   145  00063F  6D                 	db	109	;'m'
   146  000640  70                 	db	112	;'p'
   147  000641  3A                 	db	58	;':'
   148  000642  00                 	db	0
   149  000643                     STR_6:
   150  000643  43                 	db	67	;'C'
   151  000644  20                 	db	32
   152  000645  20                 	db	32
   153  000646  20                 	db	32
   154  000647  20                 	db	32
   155  000648  00                 	db	0
   156  000649                     STR_5:
   157  000649  2D                 	db	45
   158  00064A  00                 	db	0
   159  0000                     
   160                           ; #config settings
   161  00064B  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           	psect	cinit
   164  00194C                     __pcinit:
   165                           	opt callstack 0
   166  00194C                     start_initialization:
   167                           	opt callstack 0
   168  00194C                     __initialization:
   169                           	opt callstack 0
   170                           
   171                           ; Clear objects allocated to COMRAM (20 bytes)
   172  00194C  EE00  F054         	lfsr	0,__pbssCOMRAM
   173  001950  0E14               	movlw	20
   174  001952                     clear_0:
   175  001952  6AEE               	clrf	postinc0,c
   176  001954  06E8               	decf	wreg,f,c
   177  001956  E1FD               	bnz	clear_0
   178  001958                     end_of_initialization:
   179                           	opt callstack 0
   180  001958                     __end_of__initialization:
   181                           	opt callstack 0
   182  001958  0E00               	movlw	low (__Lsmallconst shr (0+16))
   183  00195A  6EF8               	movwf	tblptru,c
   184  00195C  0E06               	movlw	high __Lsmallconst
   185  00195E  6EF7               	movwf	tblptrh,c
   186  001960  0100               	movlb	0
   187  001962  EF26  F003         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190  000054                     __pbssCOMRAM:
   191                           	opt callstack 0
   192  000054                     	ds	10
   193  00005E                     _aft_val:
   194                           	opt callstack 0
   195  00005E                     	ds	4
   196  000062                     _pre_val:
   197                           	opt callstack 0
   198  000062                     	ds	4
   199  000066                     _status:
   200                           	opt callstack 0
   201  000066                     	ds	2
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	opt callstack 0
   206  000001                     ??_read_byte:
   207  000001                     ??_write_byte:
   208  000001                     ?___wmul:
   209                           	opt callstack 0
   210  000001                     ?___lwdiv:
   211                           	opt callstack 0
   212  000001                     ?___lwmod:
   213                           	opt callstack 0
   214  000001                     ?___fladd:
   215                           	opt callstack 0
   216  000001                     ?___xxtofl:
   217                           	opt callstack 0
   218  000001                     delay@j:
   219                           	opt callstack 0
   220  000001                     ___wmul@multiplier:
   221                           	opt callstack 0
   222  000001                     ___lwdiv@dividend:
   223                           	opt callstack 0
   224  000001                     ___lwmod@dividend:
   225                           	opt callstack 0
   226  000001                     ___flge@ff1:
   227                           	opt callstack 0
   228  000001                     ___fladd@b:
   229                           	opt callstack 0
   230  000001                     ___xxtofl@val:
   231                           	opt callstack 0
   232                           
   233                           ; 4 bytes @ 0x0
   234  000001                     	ds	2
   235  000003                     read_byte@result:
   236                           	opt callstack 0
   237  000003                     write_byte@val:
   238                           	opt callstack 0
   239  000003                     delay@i:
   240                           	opt callstack 0
   241  000003                     ___wmul@multiplicand:
   242                           	opt callstack 0
   243  000003                     ___lwdiv@divisor:
   244                           	opt callstack 0
   245  000003                     ___lwmod@divisor:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249  000003                     	ds	1
   250  000004                     read_byte@i:
   251                           	opt callstack 0
   252  000004                     write_byte@i:
   253                           	opt callstack 0
   254                           
   255                           ; 1 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     ??___xxtofl:
   258  000005                     lcd_init_write@a:
   259                           	opt callstack 0
   260  000005                     lcd_com@a:
   261                           	opt callstack 0
   262  000005                     ___lwmod@counter:
   263                           	opt callstack 0
   264  000005                     ___wmul@product:
   265                           	opt callstack 0
   266  000005                     ___lwdiv@quotient:
   267                           	opt callstack 0
   268  000005                     ___flge@ff2:
   269                           	opt callstack 0
   270  000005                     ___fladd@a:
   271                           	opt callstack 0
   272                           
   273                           ; 4 bytes @ 0x4
   274  000005                     	ds	1
   275  000006                     lcd_com@temp:
   276                           	opt callstack 0
   277                           
   278                           ; 1 bytes @ 0x5
   279  000006                     	ds	1
   280  000007                     lcd_data@a:
   281                           	opt callstack 0
   282  000007                     ___lwdiv@counter:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x6
   286  000007                     	ds	1
   287  000008                     lcd_puts@str:
   288                           	opt callstack 0
   289                           
   290                           ; 2 bytes @ 0x7
   291  000008                     	ds	1
   292  000009                     ??___fladd:
   293  000009                     ??___flge:
   294  000009                     ___xxtofl@sign:
   295                           	opt callstack 0
   296                           
   297                           ; 1 bytes @ 0x8
   298  000009                     	ds	1
   299  00000A                     ??_lcd_puts:
   300  00000A                     ___xxtofl@exp:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0x9
   304  00000A                     	ds	1
   305  00000B                     ___xxtofl@arg:
   306                           	opt callstack 0
   307                           
   308                           ; 4 bytes @ 0xA
   309  00000B                     	ds	1
   310  00000C                     lcd_puts@i:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0xB
   314  00000C                     	ds	1
   315  00000D                     ___fladd@signs:
   316                           	opt callstack 0
   317                           
   318                           ; 1 bytes @ 0xC
   319  00000D                     	ds	1
   320  00000E                     ___fladd@aexp:
   321                           	opt callstack 0
   322                           
   323                           ; 1 bytes @ 0xD
   324  00000E                     	ds	1
   325  00000F                     ?___flmul:
   326                           	opt callstack 0
   327  00000F                     ___fladd@bexp:
   328                           	opt callstack 0
   329  00000F                     ___flmul@b:
   330                           	opt callstack 0
   331                           
   332                           ; 4 bytes @ 0xE
   333  00000F                     	ds	1
   334  000010                     ___fladd@grs:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0xF
   338  000010                     	ds	1
   339  000011                     ?___flsub:
   340                           	opt callstack 0
   341  000011                     ___flsub@b:
   342                           	opt callstack 0
   343                           
   344                           ; 4 bytes @ 0x10
   345  000011                     	ds	2
   346  000013                     ___flmul@a:
   347                           	opt callstack 0
   348                           
   349                           ; 4 bytes @ 0x12
   350  000013                     	ds	2
   351  000015                     ___flsub@a:
   352                           	opt callstack 0
   353                           
   354                           ; 4 bytes @ 0x14
   355  000015                     	ds	2
   356  000017                     ??___flmul:
   357                           
   358                           ; 1 bytes @ 0x16
   359  000017                     	ds	2
   360  000019                     
   361                           ; 1 bytes @ 0x18
   362  000019                     	ds	2
   363  00001B                     ___flmul@sign:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x1A
   367  00001B                     	ds	1
   368  00001C                     ___flmul@grs:
   369                           	opt callstack 0
   370                           
   371                           ; 4 bytes @ 0x1B
   372  00001C                     	ds	4
   373  000020                     ___flmul@aexp:
   374                           	opt callstack 0
   375                           
   376                           ; 1 bytes @ 0x1F
   377  000020                     	ds	1
   378  000021                     ___flmul@bexp:
   379                           	opt callstack 0
   380                           
   381                           ; 1 bytes @ 0x20
   382  000021                     	ds	1
   383  000022                     ___flmul@prod:
   384                           	opt callstack 0
   385                           
   386                           ; 4 bytes @ 0x21
   387  000022                     	ds	4
   388  000026                     ___flmul@temp:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x25
   392  000026                     	ds	2
   393  000028                     ?___fltol:
   394                           	opt callstack 0
   395  000028                     ___fltol@f1:
   396                           	opt callstack 0
   397                           
   398                           ; 4 bytes @ 0x27
   399  000028                     	ds	4
   400  00002C                     ??___fltol:
   401                           
   402                           ; 1 bytes @ 0x2B
   403  00002C                     	ds	4
   404  000030                     ___fltol@sign1:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0x2F
   408  000030                     	ds	1
   409  000031                     ___fltol@exp1:
   410                           	opt callstack 0
   411                           
   412                           ; 1 bytes @ 0x30
   413  000031                     	ds	1
   414  000032                     lcd_bcd@ui_number:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x31
   418  000032                     	ds	2
   419  000034                     lcd_bcd@ui_decimal:
   420                           	opt callstack 0
   421                           
   422                           ; 10 bytes @ 0x33
   423  000034                     	ds	10
   424  00003E                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x3D
   427  00003E                     	ds	2
   428  000040                     main@difference1:
   429                           	opt callstack 0
   430                           
   431                           ; 4 bytes @ 0x3F
   432  000040                     	ds	4
   433  000044                     main@difference2:
   434                           	opt callstack 0
   435                           
   436                           ; 4 bytes @ 0x43
   437  000044                     	ds	4
   438  000048                     main@TempL:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x47
   442  000048                     	ds	2
   443  00004A                     main@TempH:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x49
   447  00004A                     	ds	2
   448  00004C                     main@t2:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x4B
   452  00004C                     	ds	2
   453  00004E                     main@t:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x4D
   457  00004E                     	ds	2
   458  000050                     main@i:
   459                           	opt callstack 0
   460                           
   461                           ; 4 bytes @ 0x4F
   462  000050                     	ds	4
   463                           
   464 ;;
   465 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   466 ;;
   467 ;; *************** function _main *****************
   468 ;; Defined at:
   469 ;;		line 49 in file "cd_ds18b20.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  i               4   79[COMRAM] float 
   474 ;;  difference2     4   67[COMRAM] float 
   475 ;;  difference1     4   63[COMRAM] float 
   476 ;;  t               2   77[COMRAM] unsigned int 
   477 ;;  t2              2   75[COMRAM] unsigned int 
   478 ;;  TempH           2   73[COMRAM] unsigned short 
   479 ;;  TempL           2   71[COMRAM] unsigned short 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   489 ;;      Params:         0       0       0       0       0       0       0
   490 ;;      Locals:        20       0       0       0       0       0       0
   491 ;;      Temps:          2       0       0       0       0       0       0
   492 ;;      Totals:        22       0       0       0       0       0       0
   493 ;;Total ram usage:       22 bytes
   494 ;; Hardware stack levels required when called:    4
   495 ;; This function calls:
   496 ;;		___flge
   497 ;;		___flmul
   498 ;;		___flsub
   499 ;;		___fltol
   500 ;;		___wmul
   501 ;;		___xxtofl
   502 ;;		_lcd_bcd
   503 ;;		_lcd_com
   504 ;;		_lcd_data
   505 ;;		_lcd_init
   506 ;;		_lcd_puts
   507 ;;		_ow_reset
   508 ;;		_read_byte
   509 ;;		_write_byte
   510 ;; This function is called by:
   511 ;;		Startup code after reset
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text0
   516  00064C                     __ptext0:
   517                           	opt callstack 0
   518  00064C                     _main:
   519                           	opt callstack 27
   520                           
   521                           ;cd_ds18b20.c: 53:     OSCCONbits.IRCF0=1;
   522                           
   523                           ;incstack = 0
   524  00064C  88D3               	bsf	4051,4,c	;volatile
   525                           
   526                           ;cd_ds18b20.c: 54:     OSCCONbits.IRCF1=1;
   527  00064E  8AD3               	bsf	4051,5,c	;volatile
   528                           
   529                           ;cd_ds18b20.c: 55:     OSCCONbits.IRCF2=1;
   530  000650  8CD3               	bsf	4051,6,c	;volatile
   531                           
   532                           ;cd_ds18b20.c: 57:     INTCONbits.GIE=0;
   533  000652  9EF2               	bcf	4082,7,c	;volatile
   534                           
   535                           ;cd_ds18b20.c: 59:     TRISCbits.TRISC0=0;
   536  000654  9094               	bcf	3988,0,c	;volatile
   537                           
   538                           ;cd_ds18b20.c: 60:     TRISCbits.TRISC1=0;
   539  000656  9294               	bcf	3988,1,c	;volatile
   540                           
   541                           ;cd_ds18b20.c: 61:     TRISCbits.TRISC2=0;
   542  000658  9494               	bcf	3988,2,c	;volatile
   543                           
   544                           ;cd_ds18b20.c: 63:     TRISD = 0x00;
   545  00065A  0E00               	movlw	0
   546  00065C  6E95               	movwf	3989,c	;volatile
   547                           
   548                           ;cd_ds18b20.c: 64:     PORTD=0x00;
   549  00065E  0E00               	movlw	0
   550  000660  6E83               	movwf	3971,c	;volatile
   551  000662  0E00               	movlw	0
   552  000664  6E44               	movwf	main@difference2,c
   553  000666  0E00               	movlw	0
   554  000668  6E45               	movwf	main@difference2+1,c
   555  00066A  0E00               	movlw	0
   556  00066C  6E46               	movwf	main@difference2+2,c
   557  00066E  0E00               	movlw	0
   558  000670  6E47               	movwf	main@difference2+3,c
   559                           
   560                           ;cd_ds18b20.c: 71:     lcd_init();
   561  000672  EC11  F00B         	call	_lcd_init	;wreg free
   562                           
   563                           ;cd_ds18b20.c: 75:   while(ow_reset()){
   564  000676  D012               	goto	l2409
   565  000678                     l2403:
   566                           
   567                           ;cd_ds18b20.c: 76:    lcd_com(0x80);
   568  000678  0E80               	movlw	128
   569  00067A  EC54  F00B         	call	_lcd_com
   570                           
   571                           ;cd_ds18b20.c: 77:    lcd_puts ("Please Connect   ");
   572  00067E  0E01               	movlw	low STR_1
   573  000680  6E08               	movwf	lcd_puts@str,c
   574  000682  0E06               	movlw	high STR_1
   575  000684  6E09               	movwf	lcd_puts@str+1,c
   576  000686  ECD1  F00B         	call	_lcd_puts	;wreg free
   577                           
   578                           ;cd_ds18b20.c: 78:    lcd_com (0xC0);
   579  00068A  0EC0               	movlw	192
   580  00068C  EC54  F00B         	call	_lcd_com
   581                           
   582                           ;cd_ds18b20.c: 79:    lcd_puts("Temp-Sense Probe");
   583  000690  0E24               	movlw	low STR_2
   584  000692  6E08               	movwf	lcd_puts@str,c
   585  000694  0E06               	movlw	high STR_2
   586  000696  6E09               	movwf	lcd_puts@str+1,c
   587  000698  ECD1  F00B         	call	_lcd_puts	;wreg free
   588  00069C                     l2409:
   589                           
   590                           ;cd_ds18b20.c: 75:   while(ow_reset()){
   591  00069C  EC5B  F00C         	call	_ow_reset	;wreg free
   592  0006A0  0900               	iorlw	0
   593  0006A2  A4D8               	btfss	status,2,c
   594  0006A4  D7E9               	goto	l2403
   595                           
   596                           ;cd_ds18b20.c: 83:         lcd_puts ("                ");
   597  0006A6  0E13               	movlw	low STR_3
   598  0006A8  6E08               	movwf	lcd_puts@str,c
   599  0006AA  0E06               	movlw	high STR_3
   600  0006AC  6E09               	movwf	lcd_puts@str+1,c
   601  0006AE  ECD1  F00B         	call	_lcd_puts	;wreg free
   602                           
   603                           ;cd_ds18b20.c: 84:   ow_reset();
   604  0006B2  EC5B  F00C         	call	_ow_reset	;wreg free
   605                           
   606                           ;cd_ds18b20.c: 85:   write_byte(0x4E);
   607  0006B6  0E4E               	movlw	78
   608  0006B8  ECAB  F00B         	call	_write_byte
   609                           
   610                           ;cd_ds18b20.c: 86:      write_byte(0);
   611  0006BC  0E00               	movlw	0
   612  0006BE  ECAB  F00B         	call	_write_byte
   613                           
   614                           ;cd_ds18b20.c: 87:   write_byte(0);
   615  0006C2  0E00               	movlw	0
   616  0006C4  ECAB  F00B         	call	_write_byte
   617                           
   618                           ;cd_ds18b20.c: 88:   write_byte(0x7F);
   619  0006C8  0E7F               	movlw	127
   620  0006CA  ECAB  F00B         	call	_write_byte
   621                           
   622                           ;cd_ds18b20.c: 89:   ow_reset();
   623  0006CE  EC5B  F00C         	call	_ow_reset	;wreg free
   624                           
   625                           ;cd_ds18b20.c: 90:   write_byte(0xCC);
   626  0006D2  0ECC               	movlw	204
   627  0006D4  ECAB  F00B         	call	_write_byte
   628                           
   629                           ;cd_ds18b20.c: 91:   write_byte(0x44);
   630  0006D8  0E44               	movlw	68
   631  0006DA  ECAB  F00B         	call	_write_byte
   632  0006DE                     l2429:
   633  0006DE  EC19  F00C         	call	_read_byte	;wreg free
   634  0006E2  0AFF               	xorlw	255
   635  0006E4  B4D8               	btfsc	status,2,c
   636  0006E6  D7FB               	goto	l2429
   637                           
   638                           ;cd_ds18b20.c: 94:    _delay((unsigned long)((500)*(8000000/4000.0)));
   639  0006E8  0E06               	movlw	6
   640  0006EA  6E3F               	movwf	(??_main+1)& (0+255),c
   641  0006EC  0E13               	movlw	19
   642  0006EE  6E3E               	movwf	??_main& (0+255),c
   643  0006F0  0EAE               	movlw	174
   644  0006F2                     u2207:
   645  0006F2  2EE8               	decfsz	wreg,f,c
   646  0006F4  D7FE               	bra	u2207
   647  0006F6  2E3E               	decfsz	??_main& (0+255),f,c
   648  0006F8  D7FC               	bra	u2207
   649  0006FA  2E3F               	decfsz	(??_main+1)& (0+255),f,c
   650  0006FC  D7FA               	bra	u2207
   651                           
   652                           ;cd_ds18b20.c: 96:    ow_reset();
   653  0006FE  EC5B  F00C         	call	_ow_reset	;wreg free
   654                           
   655                           ;cd_ds18b20.c: 98:    write_byte(0xCC);
   656  000702  0ECC               	movlw	204
   657  000704  ECAB  F00B         	call	_write_byte
   658                           
   659                           ;cd_ds18b20.c: 99:    write_byte(0xBE);
   660  000708  0EBE               	movlw	190
   661  00070A  ECAB  F00B         	call	_write_byte
   662                           
   663                           ;cd_ds18b20.c: 101:    TempL = read_byte();
   664  00070E  EC19  F00C         	call	_read_byte	;wreg free
   665  000712  6E3E               	movwf	??_main& (0+255),c
   666  000714  503E               	movf	??_main,w,c
   667  000716  6E48               	movwf	main@TempL,c
   668  000718  6A49               	clrf	main@TempL+1,c
   669                           
   670                           ;cd_ds18b20.c: 102:    TempH = read_byte();
   671  00071A  EC19  F00C         	call	_read_byte	;wreg free
   672  00071E  6E3E               	movwf	??_main& (0+255),c
   673  000720  503E               	movf	??_main,w,c
   674  000722  6E4A               	movwf	main@TempH,c
   675  000724  6A4B               	clrf	main@TempH+1,c
   676                           
   677                           ;cd_ds18b20.c: 113:   if((TempH & 0x80)!=0){
   678  000726  AE4A               	btfss	main@TempH,7,c
   679  000728  D142               	goto	l2505
   680                           
   681                           ;cd_ds18b20.c: 114:    t=TempH;
   682  00072A  C04A  F04E         	movff	main@TempH,main@t
   683  00072E  C04B  F04F         	movff	main@TempH+1,main@t+1
   684                           
   685                           ;cd_ds18b20.c: 115:          t<<=8;
   686  000732  504E               	movf	main@t,w,c
   687  000734  6E4F               	movwf	main@t+1,c
   688  000736  6A4E               	clrf	main@t,c
   689                           
   690                           ;cd_ds18b20.c: 116:          t=t|TempL;
   691  000738  5048               	movf	main@TempL,w,c
   692  00073A  104E               	iorwf	main@t,w,c
   693  00073C  6E4E               	movwf	main@t,c
   694  00073E  5049               	movf	main@TempL+1,w,c
   695  000740  104F               	iorwf	main@t+1,w,c
   696  000742  6E4F               	movwf	main@t+1,c
   697                           
   698                           ;cd_ds18b20.c: 117:          t=t-1;
   699  000744  0EFF               	movlw	255
   700  000746  244E               	addwf	main@t,w,c
   701  000748  6E4E               	movwf	main@t,c
   702  00074A  0EFF               	movlw	255
   703  00074C  204F               	addwfc	main@t+1,w,c
   704  00074E  6E4F               	movwf	main@t+1,c
   705                           
   706                           ;cd_ds18b20.c: 118:          t=~t;
   707  000750  1E4E               	comf	main@t,f,c
   708  000752  1E4F               	comf	main@t+1,f,c
   709                           
   710                           ;cd_ds18b20.c: 119:          t>>=4;
   711  000754  3A4E               	swapf	main@t,f,c
   712  000756  3A4F               	swapf	main@t+1,f,c
   713  000758  0E0F               	movlw	15
   714  00075A  164E               	andwf	main@t,f,c
   715  00075C  504F               	movf	main@t+1,w,c
   716  00075E  0BF0               	andlw	240
   717  000760  124E               	iorwf	main@t,f,c
   718  000762  0E0F               	movlw	15
   719  000764  164F               	andwf	main@t+1,f,c
   720                           
   721                           ;cd_ds18b20.c: 120:    t=t*100;
   722  000766  C04E  F001         	movff	main@t,___wmul@multiplier
   723  00076A  C04F  F002         	movff	main@t+1,___wmul@multiplier+1
   724  00076E  0E00               	movlw	0
   725  000770  6E04               	movwf	___wmul@multiplicand+1,c
   726  000772  0E64               	movlw	100
   727  000774  6E03               	movwf	___wmul@multiplicand,c
   728  000776  EC73  F00C         	call	___wmul	;wreg free
   729  00077A  C001  F04E         	movff	?___wmul,main@t
   730  00077E  C002  F04F         	movff	?___wmul+1,main@t+1
   731                           
   732                           ;cd_ds18b20.c: 121:    t2=TempL;
   733  000782  C048  F04C         	movff	main@TempL,main@t2
   734  000786  C049  F04D         	movff	main@TempL+1,main@t2+1
   735                           
   736                           ;cd_ds18b20.c: 122:    t2=t2-1;
   737  00078A  0EFF               	movlw	255
   738  00078C  244C               	addwf	main@t2,w,c
   739  00078E  6E4C               	movwf	main@t2,c
   740  000790  0EFF               	movlw	255
   741  000792  204D               	addwfc	main@t2+1,w,c
   742  000794  6E4D               	movwf	main@t2+1,c
   743                           
   744                           ;cd_ds18b20.c: 123:          t2=~t2;
   745  000796  1E4C               	comf	main@t2,f,c
   746  000798  1E4D               	comf	main@t2+1,f,c
   747                           
   748                           ;cd_ds18b20.c: 124:          t2=t2&0x0f;
   749  00079A  0E0F               	movlw	15
   750  00079C  144C               	andwf	main@t2,w,c
   751  00079E  6E4C               	movwf	main@t2,c
   752  0007A0  6A4D               	clrf	main@t2+1,c
   753                           
   754                           ;cd_ds18b20.c: 125:    t2=t2 * 6.25;
   755  0007A2  0E00               	movlw	0
   756  0007A4  6E13               	movwf	___flmul@a,c
   757  0007A6  0E00               	movlw	0
   758  0007A8  6E14               	movwf	___flmul@a+1,c
   759  0007AA  0EC8               	movlw	200
   760  0007AC  6E15               	movwf	___flmul@a+2,c
   761  0007AE  0E40               	movlw	64
   762  0007B0  6E16               	movwf	___flmul@a+3,c
   763  0007B2  C04C  F001         	movff	main@t2,___xxtofl@val
   764  0007B6  C04D  F002         	movff	main@t2+1,___xxtofl@val+1
   765  0007BA  6A03               	clrf	___xxtofl@val+2,c
   766  0007BC  6A04               	clrf	___xxtofl@val+3,c
   767  0007BE  0E00               	movlw	0
   768  0007C0  ECAC  F009         	call	___xxtofl
   769  0007C4  C001  F00F         	movff	?___xxtofl,___flmul@b
   770  0007C8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   771  0007CC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   772  0007D0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   773  0007D4  ECC3  F005         	call	___flmul	;wreg free
   774  0007D8  C00F  F028         	movff	?___flmul,___fltol@f1
   775  0007DC  C010  F029         	movff	?___flmul+1,___fltol@f1+1
   776  0007E0  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
   777  0007E4  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
   778  0007E8  ECB4  F00A         	call	___fltol	;wreg free
   779  0007EC  C028  F04C         	movff	?___fltol,main@t2
   780  0007F0  C029  F04D         	movff	?___fltol+1,main@t2+1
   781                           
   782                           ;cd_ds18b20.c: 126:    i=((unsigned int)t ) + (unsigned int)t2;
   783  0007F4  504C               	movf	main@t2,w,c
   784  0007F6  244E               	addwf	main@t,w,c
   785  0007F8  6E3E               	movwf	??_main& (0+255),c
   786  0007FA  504D               	movf	main@t2+1,w,c
   787  0007FC  204F               	addwfc	main@t+1,w,c
   788  0007FE  6E3F               	movwf	(??_main+1)& (0+255),c
   789  000800  C03E  F001         	movff	??_main,___xxtofl@val
   790  000804  C03F  F002         	movff	??_main+1,___xxtofl@val+1
   791  000808  6A03               	clrf	___xxtofl@val+2,c
   792  00080A  6A04               	clrf	___xxtofl@val+3,c
   793  00080C  0E00               	movlw	0
   794  00080E  ECAC  F009         	call	___xxtofl
   795  000812  C001  F050         	movff	?___xxtofl,main@i
   796  000816  C002  F051         	movff	?___xxtofl+1,main@i+1
   797  00081A  C003  F052         	movff	?___xxtofl+2,main@i+2
   798  00081E  C004  F053         	movff	?___xxtofl+3,main@i+3
   799                           
   800                           ;cd_ds18b20.c: 130:    pre_val=aft_val;
   801  000822  C05E  F062         	movff	_aft_val,_pre_val
   802  000826  C05F  F063         	movff	_aft_val+1,_pre_val+1
   803  00082A  C060  F064         	movff	_aft_val+2,_pre_val+2
   804  00082E  C061  F065         	movff	_aft_val+3,_pre_val+3
   805                           
   806                           ;cd_ds18b20.c: 132:    difference1 = pre_val - i;
   807  000832  C062  F011         	movff	_pre_val,___flsub@b
   808  000836  C063  F012         	movff	_pre_val+1,___flsub@b+1
   809  00083A  C064  F013         	movff	_pre_val+2,___flsub@b+2
   810  00083E  C065  F014         	movff	_pre_val+3,___flsub@b+3
   811  000842  C050  F015         	movff	main@i,___flsub@a
   812  000846  C051  F016         	movff	main@i+1,___flsub@a+1
   813  00084A  C052  F017         	movff	main@i+2,___flsub@a+2
   814  00084E  C053  F018         	movff	main@i+3,___flsub@a+3
   815  000852  ECF6  F00B         	call	___flsub	;wreg free
   816  000856  C011  F040         	movff	?___flsub,main@difference1
   817  00085A  C012  F041         	movff	?___flsub+1,main@difference1+1
   818  00085E  C013  F042         	movff	?___flsub+2,main@difference1+2
   819  000862  C014  F043         	movff	?___flsub+3,main@difference1+3
   820                           
   821                           ;cd_ds18b20.c: 133:    difference2 = i - pre_val;
   822  000866  C050  F011         	movff	main@i,___flsub@b
   823  00086A  C051  F012         	movff	main@i+1,___flsub@b+1
   824  00086E  C052  F013         	movff	main@i+2,___flsub@b+2
   825  000872  C053  F014         	movff	main@i+3,___flsub@b+3
   826  000876  C062  F015         	movff	_pre_val,___flsub@a
   827  00087A  C063  F016         	movff	_pre_val+1,___flsub@a+1
   828  00087E  C064  F017         	movff	_pre_val+2,___flsub@a+2
   829  000882  C065  F018         	movff	_pre_val+3,___flsub@a+3
   830  000886  ECF6  F00B         	call	___flsub	;wreg free
   831  00088A  C011  F044         	movff	?___flsub,main@difference2
   832  00088E  C012  F045         	movff	?___flsub+1,main@difference2+1
   833  000892  C013  F046         	movff	?___flsub+2,main@difference2+2
   834  000896  C014  F047         	movff	?___flsub+3,main@difference2+3
   835                           
   836                           ;cd_ds18b20.c: 135:    if(difference1 > 20 || difference2 > 20){
   837  00089A  0E00               	movlw	0
   838  00089C  6E01               	movwf	___flge@ff1,c
   839  00089E  0E00               	movlw	0
   840  0008A0  6E02               	movwf	___flge@ff1+1,c
   841  0008A2  0EA0               	movlw	160
   842  0008A4  6E03               	movwf	___flge@ff1+2,c
   843  0008A6  0E41               	movlw	65
   844  0008A8  6E04               	movwf	___flge@ff1+3,c
   845  0008AA  C040  F005         	movff	main@difference1,___flge@ff2
   846  0008AE  C041  F006         	movff	main@difference1+1,___flge@ff2+1
   847  0008B2  C042  F007         	movff	main@difference1+2,___flge@ff2+2
   848  0008B6  C043  F008         	movff	main@difference1+3,___flge@ff2+3
   849  0008BA  EC4C  F00A         	call	___flge	;wreg free
   850  0008BE  A0D8               	btfss	status,0,c
   851  0008C0  D014               	goto	u2170
   852  0008C2  0E00               	movlw	0
   853  0008C4  6E01               	movwf	___flge@ff1,c
   854  0008C6  0E00               	movlw	0
   855  0008C8  6E02               	movwf	___flge@ff1+1,c
   856  0008CA  0EA0               	movlw	160
   857  0008CC  6E03               	movwf	___flge@ff1+2,c
   858  0008CE  0E41               	movlw	65
   859  0008D0  6E04               	movwf	___flge@ff1+3,c
   860  0008D2  C044  F005         	movff	main@difference2,___flge@ff2
   861  0008D6  C045  F006         	movff	main@difference2+1,___flge@ff2+1
   862  0008DA  C046  F007         	movff	main@difference2+2,___flge@ff2+2
   863  0008DE  C047  F008         	movff	main@difference2+3,___flge@ff2+3
   864  0008E2  EC4C  F00A         	call	___flge	;wreg free
   865  0008E6  B0D8               	btfsc	status,0,c
   866  0008E8  D035               	goto	l2493
   867  0008EA                     u2170:
   868                           
   869                           ;cd_ds18b20.c: 136:       aft_val = i;
   870  0008EA  C050  F05E         	movff	main@i,_aft_val
   871  0008EE  C051  F05F         	movff	main@i+1,_aft_val+1
   872  0008F2  C052  F060         	movff	main@i+2,_aft_val+2
   873  0008F6  C053  F061         	movff	main@i+3,_aft_val+3
   874                           
   875                           ;cd_ds18b20.c: 137:       lcd_com (0x80);
   876  0008FA  0E80               	movlw	128
   877  0008FC  EC54  F00B         	call	_lcd_com
   878                           
   879                           ;cd_ds18b20.c: 138:       lcd_puts ("DS18B20 Temp:");
   880  000900  0E35               	movlw	low STR_4
   881  000902  6E08               	movwf	lcd_puts@str,c
   882  000904  0E06               	movlw	high STR_4
   883  000906  6E09               	movwf	lcd_puts@str+1,c
   884  000908  ECD1  F00B         	call	_lcd_puts	;wreg free
   885                           
   886                           ;cd_ds18b20.c: 139:       lcd_com (0xc0);
   887  00090C  0EC0               	movlw	192
   888  00090E  EC54  F00B         	call	_lcd_com
   889                           
   890                           ;cd_ds18b20.c: 140:       lcd_puts("-");
   891  000912  0E49               	movlw	low STR_5
   892  000914  6E08               	movwf	lcd_puts@str,c
   893  000916  0E06               	movlw	high STR_5
   894  000918  6E09               	movwf	lcd_puts@str+1,c
   895  00091A  ECD1  F00B         	call	_lcd_puts	;wreg free
   896                           
   897                           ;cd_ds18b20.c: 141:       lcd_bcd (5,aft_val);
   898  00091E  C05E  F028         	movff	_aft_val,___fltol@f1
   899  000922  C05F  F029         	movff	_aft_val+1,___fltol@f1+1
   900  000926  C060  F02A         	movff	_aft_val+2,___fltol@f1+2
   901  00092A  C061  F02B         	movff	_aft_val+3,___fltol@f1+3
   902  00092E  ECB4  F00A         	call	___fltol	;wreg free
   903  000932  C028  F032         	movff	?___fltol,lcd_bcd@ui_number
   904  000936  C029  F033         	movff	?___fltol+1,lcd_bcd@ui_number+1
   905  00093A  0E05               	movlw	5
   906  00093C  ECF2  F008         	call	_lcd_bcd
   907                           
   908                           ;cd_ds18b20.c: 142:       lcd_data(223);
   909  000940  0EDF               	movlw	223
   910  000942  ECB3  F00C         	call	_lcd_data
   911                           
   912                           ;cd_ds18b20.c: 143:       lcd_puts("C    ");
   913  000946  0E43               	movlw	low STR_6
   914  000948  6E08               	movwf	lcd_puts@str,c
   915  00094A  0E06               	movlw	high STR_6
   916  00094C  6E09               	movwf	lcd_puts@str+1,c
   917  00094E  ECD1  F00B         	call	_lcd_puts	;wreg free
   918                           
   919                           ;cd_ds18b20.c: 145:      }
   920  000952  D6A4               	goto	l2409
   921  000954                     l2493:
   922                           
   923                           ;cd_ds18b20.c: 148:       lcd_com (0x80);
   924  000954  0E80               	movlw	128
   925  000956  EC54  F00B         	call	_lcd_com
   926                           
   927                           ;cd_ds18b20.c: 149:       lcd_puts ("DS18B20 Temp:");
   928  00095A  0E35               	movlw	low STR_4
   929  00095C  6E08               	movwf	lcd_puts@str,c
   930  00095E  0E06               	movlw	high STR_4
   931  000960  6E09               	movwf	lcd_puts@str+1,c
   932  000962  ECD1  F00B         	call	_lcd_puts	;wreg free
   933                           
   934                           ;cd_ds18b20.c: 150:       lcd_com (0xc0);
   935  000966  0EC0               	movlw	192
   936  000968  EC54  F00B         	call	_lcd_com
   937                           
   938                           ;cd_ds18b20.c: 151:       lcd_puts("-");
   939  00096C  0E49               	movlw	low STR_5
   940  00096E  6E08               	movwf	lcd_puts@str,c
   941  000970  0E06               	movlw	high STR_5
   942  000972  6E09               	movwf	lcd_puts@str+1,c
   943  000974  ECD1  F00B         	call	_lcd_puts	;wreg free
   944                           
   945                           ;cd_ds18b20.c: 152:       lcd_bcd (5,pre_val);
   946  000978  C062  F028         	movff	_pre_val,___fltol@f1
   947  00097C  C063  F029         	movff	_pre_val+1,___fltol@f1+1
   948  000980  C064  F02A         	movff	_pre_val+2,___fltol@f1+2
   949  000984  C065  F02B         	movff	_pre_val+3,___fltol@f1+3
   950  000988  ECB4  F00A         	call	___fltol	;wreg free
   951  00098C  C028  F032         	movff	?___fltol,lcd_bcd@ui_number
   952  000990  C029  F033         	movff	?___fltol+1,lcd_bcd@ui_number+1
   953  000994  0E05               	movlw	5
   954  000996  ECF2  F008         	call	_lcd_bcd
   955                           
   956                           ;cd_ds18b20.c: 153:       lcd_data(223);
   957  00099A  0EDF               	movlw	223
   958  00099C  ECB3  F00C         	call	_lcd_data
   959                           
   960                           ;cd_ds18b20.c: 154:       lcd_puts("C    ");
   961  0009A0  0E43               	movlw	low STR_6
   962  0009A2  6E08               	movwf	lcd_puts@str,c
   963  0009A4  0E06               	movlw	high STR_6
   964  0009A6  6E09               	movwf	lcd_puts@str+1,c
   965  0009A8  ECD1  F00B         	call	_lcd_puts	;wreg free
   966  0009AC  D677               	goto	l2409
   967  0009AE                     l2505:
   968                           
   969                           ;cd_ds18b20.c: 163:    i=((unsigned int)TempH << 8 ) + (unsigned int)TempL;
   970  0009AE  504A               	movf	main@TempH,w,c
   971  0009B0  6E3F               	movwf	(??_main+1)& (0+255),c
   972  0009B2  6A3E               	clrf	??_main& (0+255),c
   973  0009B4  5048               	movf	main@TempL,w,c
   974  0009B6  263E               	addwf	??_main,f,c
   975  0009B8  5049               	movf	main@TempL+1,w,c
   976  0009BA  223F               	addwfc	??_main+1,f,c
   977  0009BC  C03E  F001         	movff	??_main,___xxtofl@val
   978  0009C0  C03F  F002         	movff	??_main+1,___xxtofl@val+1
   979  0009C4  6A03               	clrf	___xxtofl@val+2,c
   980  0009C6  6A04               	clrf	___xxtofl@val+3,c
   981  0009C8  0E00               	movlw	0
   982  0009CA  ECAC  F009         	call	___xxtofl
   983  0009CE  C001  F050         	movff	?___xxtofl,main@i
   984  0009D2  C002  F051         	movff	?___xxtofl+1,main@i+1
   985  0009D6  C003  F052         	movff	?___xxtofl+2,main@i+2
   986  0009DA  C004  F053         	movff	?___xxtofl+3,main@i+3
   987                           
   988                           ;cd_ds18b20.c: 164:    i = i * 6.25;
   989  0009DE  C050  F00F         	movff	main@i,___flmul@b
   990  0009E2  C051  F010         	movff	main@i+1,___flmul@b+1
   991  0009E6  C052  F011         	movff	main@i+2,___flmul@b+2
   992  0009EA  C053  F012         	movff	main@i+3,___flmul@b+3
   993  0009EE  0E00               	movlw	0
   994  0009F0  6E13               	movwf	___flmul@a,c
   995  0009F2  0E00               	movlw	0
   996  0009F4  6E14               	movwf	___flmul@a+1,c
   997  0009F6  0EC8               	movlw	200
   998  0009F8  6E15               	movwf	___flmul@a+2,c
   999  0009FA  0E40               	movlw	64
  1000  0009FC  6E16               	movwf	___flmul@a+3,c
  1001  0009FE  ECC3  F005         	call	___flmul	;wreg free
  1002  000A02  C00F  F050         	movff	?___flmul,main@i
  1003  000A06  C010  F051         	movff	?___flmul+1,main@i+1
  1004  000A0A  C011  F052         	movff	?___flmul+2,main@i+2
  1005  000A0E  C012  F053         	movff	?___flmul+3,main@i+3
  1006                           
  1007                           ;cd_ds18b20.c: 167:    pre_val=aft_val;
  1008  000A12  C05E  F062         	movff	_aft_val,_pre_val
  1009  000A16  C05F  F063         	movff	_aft_val+1,_pre_val+1
  1010  000A1A  C060  F064         	movff	_aft_val+2,_pre_val+2
  1011  000A1E  C061  F065         	movff	_aft_val+3,_pre_val+3
  1012                           
  1013                           ;cd_ds18b20.c: 170:    difference1 = pre_val - i;
  1014  000A22  C062  F011         	movff	_pre_val,___flsub@b
  1015  000A26  C063  F012         	movff	_pre_val+1,___flsub@b+1
  1016  000A2A  C064  F013         	movff	_pre_val+2,___flsub@b+2
  1017  000A2E  C065  F014         	movff	_pre_val+3,___flsub@b+3
  1018  000A32  C050  F015         	movff	main@i,___flsub@a
  1019  000A36  C051  F016         	movff	main@i+1,___flsub@a+1
  1020  000A3A  C052  F017         	movff	main@i+2,___flsub@a+2
  1021  000A3E  C053  F018         	movff	main@i+3,___flsub@a+3
  1022  000A42  ECF6  F00B         	call	___flsub	;wreg free
  1023  000A46  C011  F040         	movff	?___flsub,main@difference1
  1024  000A4A  C012  F041         	movff	?___flsub+1,main@difference1+1
  1025  000A4E  C013  F042         	movff	?___flsub+2,main@difference1+2
  1026  000A52  C014  F043         	movff	?___flsub+3,main@difference1+3
  1027                           
  1028                           ;cd_ds18b20.c: 171:    difference2 = i - pre_val;
  1029  000A56  C050  F011         	movff	main@i,___flsub@b
  1030  000A5A  C051  F012         	movff	main@i+1,___flsub@b+1
  1031  000A5E  C052  F013         	movff	main@i+2,___flsub@b+2
  1032  000A62  C053  F014         	movff	main@i+3,___flsub@b+3
  1033  000A66  C062  F015         	movff	_pre_val,___flsub@a
  1034  000A6A  C063  F016         	movff	_pre_val+1,___flsub@a+1
  1035  000A6E  C064  F017         	movff	_pre_val+2,___flsub@a+2
  1036  000A72  C065  F018         	movff	_pre_val+3,___flsub@a+3
  1037  000A76  ECF6  F00B         	call	___flsub	;wreg free
  1038  000A7A  C011  F044         	movff	?___flsub,main@difference2
  1039  000A7E  C012  F045         	movff	?___flsub+1,main@difference2+1
  1040  000A82  C013  F046         	movff	?___flsub+2,main@difference2+2
  1041  000A86  C014  F047         	movff	?___flsub+3,main@difference2+3
  1042                           
  1043                           ;cd_ds18b20.c: 173:    if(difference1 > 20 || difference2 > 20){
  1044  000A8A  0E00               	movlw	0
  1045  000A8C  6E01               	movwf	___flge@ff1,c
  1046  000A8E  0E00               	movlw	0
  1047  000A90  6E02               	movwf	___flge@ff1+1,c
  1048  000A92  0EA0               	movlw	160
  1049  000A94  6E03               	movwf	___flge@ff1+2,c
  1050  000A96  0E41               	movlw	65
  1051  000A98  6E04               	movwf	___flge@ff1+3,c
  1052  000A9A  C040  F005         	movff	main@difference1,___flge@ff2
  1053  000A9E  C041  F006         	movff	main@difference1+1,___flge@ff2+1
  1054  000AA2  C042  F007         	movff	main@difference1+2,___flge@ff2+2
  1055  000AA6  C043  F008         	movff	main@difference1+3,___flge@ff2+3
  1056  000AAA  EC4C  F00A         	call	___flge	;wreg free
  1057  000AAE  A0D8               	btfss	status,0,c
  1058  000AB0  D014               	goto	u2190
  1059  000AB2  0E00               	movlw	0
  1060  000AB4  6E01               	movwf	___flge@ff1,c
  1061  000AB6  0E00               	movlw	0
  1062  000AB8  6E02               	movwf	___flge@ff1+1,c
  1063  000ABA  0EA0               	movlw	160
  1064  000ABC  6E03               	movwf	___flge@ff1+2,c
  1065  000ABE  0E41               	movlw	65
  1066  000AC0  6E04               	movwf	___flge@ff1+3,c
  1067  000AC2  C044  F005         	movff	main@difference2,___flge@ff2
  1068  000AC6  C045  F006         	movff	main@difference2+1,___flge@ff2+1
  1069  000ACA  C046  F007         	movff	main@difference2+2,___flge@ff2+2
  1070  000ACE  C047  F008         	movff	main@difference2+3,___flge@ff2+3
  1071  000AD2  EC4C  F00A         	call	___flge	;wreg free
  1072  000AD6  B0D8               	btfsc	status,0,c
  1073  000AD8  D02F               	goto	l2531
  1074  000ADA                     u2190:
  1075                           
  1076                           ;cd_ds18b20.c: 174:       aft_val = i;
  1077  000ADA  C050  F05E         	movff	main@i,_aft_val
  1078  000ADE  C051  F05F         	movff	main@i+1,_aft_val+1
  1079  000AE2  C052  F060         	movff	main@i+2,_aft_val+2
  1080  000AE6  C053  F061         	movff	main@i+3,_aft_val+3
  1081                           
  1082                           ;cd_ds18b20.c: 175:       lcd_com (0x80);
  1083  000AEA  0E80               	movlw	128
  1084  000AEC  EC54  F00B         	call	_lcd_com
  1085                           
  1086                           ;cd_ds18b20.c: 176:       lcd_puts ("DS18B20 Temp:");
  1087  000AF0  0E35               	movlw	low STR_4
  1088  000AF2  6E08               	movwf	lcd_puts@str,c
  1089  000AF4  0E06               	movlw	high STR_4
  1090  000AF6  6E09               	movwf	lcd_puts@str+1,c
  1091  000AF8  ECD1  F00B         	call	_lcd_puts	;wreg free
  1092                           
  1093                           ;cd_ds18b20.c: 177:       lcd_com (0xc0);
  1094  000AFC  0EC0               	movlw	192
  1095  000AFE  EC54  F00B         	call	_lcd_com
  1096                           
  1097                           ;cd_ds18b20.c: 178:       lcd_bcd (5,aft_val);
  1098  000B02  C05E  F028         	movff	_aft_val,___fltol@f1
  1099  000B06  C05F  F029         	movff	_aft_val+1,___fltol@f1+1
  1100  000B0A  C060  F02A         	movff	_aft_val+2,___fltol@f1+2
  1101  000B0E  C061  F02B         	movff	_aft_val+3,___fltol@f1+3
  1102  000B12  ECB4  F00A         	call	___fltol	;wreg free
  1103  000B16  C028  F032         	movff	?___fltol,lcd_bcd@ui_number
  1104  000B1A  C029  F033         	movff	?___fltol+1,lcd_bcd@ui_number+1
  1105  000B1E  0E05               	movlw	5
  1106  000B20  ECF2  F008         	call	_lcd_bcd
  1107                           
  1108                           ;cd_ds18b20.c: 179:       lcd_data(223);
  1109  000B24  0EDF               	movlw	223
  1110  000B26  ECB3  F00C         	call	_lcd_data
  1111                           
  1112                           ;cd_ds18b20.c: 180:       lcd_puts("C    ");
  1113  000B2A  0E43               	movlw	low STR_6
  1114  000B2C  6E08               	movwf	lcd_puts@str,c
  1115  000B2E  0E06               	movlw	high STR_6
  1116  000B30  6E09               	movwf	lcd_puts@str+1,c
  1117  000B32  ECD1  F00B         	call	_lcd_puts	;wreg free
  1118                           
  1119                           ;cd_ds18b20.c: 182:      }
  1120  000B36  D5B2               	goto	l2409
  1121  000B38                     l2531:
  1122                           
  1123                           ;cd_ds18b20.c: 184:       lcd_com (0x80);
  1124  000B38  0E80               	movlw	128
  1125  000B3A  EC54  F00B         	call	_lcd_com
  1126                           
  1127                           ;cd_ds18b20.c: 185:       lcd_puts ("DS18B20 Temp:");
  1128  000B3E  0E35               	movlw	low STR_4
  1129  000B40  6E08               	movwf	lcd_puts@str,c
  1130  000B42  0E06               	movlw	high STR_4
  1131  000B44  6E09               	movwf	lcd_puts@str+1,c
  1132  000B46  ECD1  F00B         	call	_lcd_puts	;wreg free
  1133                           
  1134                           ;cd_ds18b20.c: 186:       lcd_com (0xc0);
  1135  000B4A  0EC0               	movlw	192
  1136  000B4C  EC54  F00B         	call	_lcd_com
  1137                           
  1138                           ;cd_ds18b20.c: 187:       lcd_bcd (5,pre_val);
  1139  000B50  C062  F028         	movff	_pre_val,___fltol@f1
  1140  000B54  C063  F029         	movff	_pre_val+1,___fltol@f1+1
  1141  000B58  C064  F02A         	movff	_pre_val+2,___fltol@f1+2
  1142  000B5C  C065  F02B         	movff	_pre_val+3,___fltol@f1+3
  1143  000B60  ECB4  F00A         	call	___fltol	;wreg free
  1144  000B64  C028  F032         	movff	?___fltol,lcd_bcd@ui_number
  1145  000B68  C029  F033         	movff	?___fltol+1,lcd_bcd@ui_number+1
  1146  000B6C  0E05               	movlw	5
  1147  000B6E  ECF2  F008         	call	_lcd_bcd
  1148                           
  1149                           ;cd_ds18b20.c: 188:       lcd_data(223);
  1150  000B72  0EDF               	movlw	223
  1151  000B74  ECB3  F00C         	call	_lcd_data
  1152                           
  1153                           ;cd_ds18b20.c: 189:       lcd_puts("C    ");
  1154  000B78  0E43               	movlw	low STR_6
  1155  000B7A  6E08               	movwf	lcd_puts@str,c
  1156  000B7C  0E06               	movlw	high STR_6
  1157  000B7E  6E09               	movwf	lcd_puts@str+1,c
  1158  000B80  ECD1  F00B         	call	_lcd_puts	;wreg free
  1159  000B84  D58B               	goto	l2409
  1160  000B86                     __end_of_main:
  1161                           	opt callstack 0
  1162                           
  1163 ;; *************** function _write_byte *****************
  1164 ;; Defined at:
  1165 ;;		line 87 in file "ds18b20.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  val             1    wreg     unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  val             1    2[COMRAM] unsigned char 
  1170 ;;  i               1    3[COMRAM] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1180 ;;      Params:         0       0       0       0       0       0       0
  1181 ;;      Locals:         2       0       0       0       0       0       0
  1182 ;;      Temps:          2       0       0       0       0       0       0
  1183 ;;      Totals:         4       0       0       0       0       0       0
  1184 ;;Total ram usage:        4 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text1
  1194  001756                     __ptext1:
  1195                           	opt callstack 0
  1196  001756                     _write_byte:
  1197                           	opt callstack 30
  1198                           
  1199                           ;incstack = 0
  1200                           ;write_byte@val stored from wreg
  1201  001756  6E03               	movwf	write_byte@val,c
  1202                           
  1203                           ;ds18b20.c: 87: void write_byte(char val);ds18b20.c: 88: {;ds18b20.c: 89:     char i;;ds
      +                          18b20.c: 90:     TRISBbits.TRISB0 = 1;
  1204  001758  8093               	bsf	3987,0,c	;volatile
  1205                           
  1206                           ;ds18b20.c: 92:   for(i = 0; i < 8; i++)
  1207  00175A  0E00               	movlw	0
  1208  00175C  6E04               	movwf	write_byte@i,c
  1209  00175E                     l1183:
  1210                           
  1211                           ;ds18b20.c: 93:   {;ds18b20.c: 94:    if((val & (1<<i))!= 0)
  1212  00175E  C004  F001         	movff	write_byte@i,??_write_byte
  1213  001762  0E01               	movlw	1
  1214  001764  6E02               	movwf	(??_write_byte+1)& (0+255),c
  1215  001766  2A01               	incf	??_write_byte,f,c
  1216  001768  D002               	goto	u524
  1217  00176A                     u525:
  1218  00176A  90D8               	bcf	status,0,c
  1219  00176C  3602               	rlcf	??_write_byte+1,f,c
  1220  00176E                     u524:
  1221  00176E  2E01               	decfsz	??_write_byte,f,c
  1222  001770  D7FC               	goto	u525
  1223  001772  5002               	movf	??_write_byte+1,w,c
  1224  001774  1403               	andwf	write_byte@val,w,c
  1225  001776  0900               	iorlw	0
  1226  001778  B4D8               	btfsc	status,2,c
  1227  00177A  D008               	goto	l45
  1228                           
  1229                           ;ds18b20.c: 95:    {;ds18b20.c: 97:    TRISBbits.TRISB0 = 0;
  1230  00177C  9093               	bcf	3987,0,c	;volatile
  1231                           
  1232                           ;ds18b20.c: 98:    PORTBbits.RB0 = 0;
  1233  00177E  9081               	bcf	3969,0,c	;volatile
  1234                           
  1235                           ;ds18b20.c: 99:    _delay((unsigned long)((1)*(8000000/4000000.0)));
  1236  001780  D000               	nop2		;2 cycle nop
  1237                           
  1238                           ;ds18b20.c: 100:    TRISBbits.TRISB0 = 1;
  1239  001782  8093               	bsf	3987,0,c	;volatile
  1240                           
  1241                           ;ds18b20.c: 101:    _delay((unsigned long)((60)*(8000000/4000000.0)));
  1242  001784  0E28               	movlw	40
  1243  001786                     u2217:
  1244  001786  2EE8               	decfsz	wreg,f,c
  1245  001788  D7FE               	bra	u2217
  1246                           
  1247                           ;ds18b20.c: 102:    }
  1248  00178A  D006               	goto	l1193
  1249  00178C                     l45:
  1250                           
  1251                           ;ds18b20.c: 104:    {;ds18b20.c: 106:    TRISBbits.TRISB0 = 0;
  1252  00178C  9093               	bcf	3987,0,c	;volatile
  1253                           
  1254                           ;ds18b20.c: 107:    PORTBbits.RB0 = 0;
  1255  00178E  9081               	bcf	3969,0,c	;volatile
  1256                           
  1257                           ;ds18b20.c: 108:    _delay((unsigned long)((60)*(8000000/4000000.0)));
  1258  001790  0E28               	movlw	40
  1259  001792                     u2227:
  1260  001792  2EE8               	decfsz	wreg,f,c
  1261  001794  D7FE               	bra	u2227
  1262                           
  1263                           ;ds18b20.c: 109:    TRISBbits.TRISB0 = 1;
  1264  001796  8093               	bsf	3987,0,c	;volatile
  1265  001798                     l1193:
  1266                           
  1267                           ;ds18b20.c: 111:   }
  1268  001798  2A04               	incf	write_byte@i,f,c
  1269  00179A  0E07               	movlw	7
  1270  00179C  6404               	cpfsgt	write_byte@i,c
  1271  00179E  D7DF               	goto	l1183
  1272  0017A0  0012               	return	
  1273  0017A2                     __end_of_write_byte:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _read_byte *****************
  1277 ;; Defined at:
  1278 ;;		line 57 in file "ds18b20.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  i               1    3[COMRAM] unsigned char 
  1283 ;;  result          1    2[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      unsigned char 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1293 ;;      Params:         0       0       0       0       0       0       0
  1294 ;;      Locals:         2       0       0       0       0       0       0
  1295 ;;      Temps:          2       0       0       0       0       0       0
  1296 ;;      Totals:         4       0       0       0       0       0       0
  1297 ;;Total ram usage:        4 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text2
  1307  001832                     __ptext2:
  1308                           	opt callstack 0
  1309  001832                     _read_byte:
  1310                           	opt callstack 30
  1311                           
  1312                           ;ds18b20.c: 59:     char i,result = 0;
  1313                           
  1314                           ;incstack = 0
  1315  001832  0E00               	movlw	0
  1316  001834  6E03               	movwf	read_byte@result,c
  1317                           
  1318                           ;ds18b20.c: 60:  TRISBbits.TRISB0 = 1;
  1319  001836  8093               	bsf	3987,0,c	;volatile
  1320                           
  1321                           ;ds18b20.c: 61:   for(i = 0; i < 8; i++)
  1322  001838  0E00               	movlw	0
  1323  00183A  6E04               	movwf	read_byte@i,c
  1324  00183C                     l33:
  1325                           
  1326                           ;ds18b20.c: 62:   {;ds18b20.c: 63:   TRISBbits.TRISB0 = 0;
  1327  00183C  9093               	bcf	3987,0,c	;volatile
  1328                           
  1329                           ;ds18b20.c: 64:   PORTBbits.RB0 = 0;
  1330  00183E  9081               	bcf	3969,0,c	;volatile
  1331                           
  1332                           ;ds18b20.c: 65:   _delay((unsigned long)((2)*(8000000/4000000.0)));
  1333  001840  D000               	nop2		;2 cycle nop
  1334  001842  D000               	nop2		;2 cycle nop
  1335                           
  1336                           ;ds18b20.c: 66:   TRISBbits.TRISB0 = 1;
  1337  001844  8093               	bsf	3987,0,c	;volatile
  1338                           
  1339                           ;ds18b20.c: 67:   if(PORTBbits.RB0 != 0)
  1340  001846  A081               	btfss	3969,0,c	;volatile
  1341  001848  D00C               	goto	l1167
  1342                           
  1343                           ;ds18b20.c: 68:   result |= 1<<i;
  1344  00184A  C004  F001         	movff	read_byte@i,??_read_byte
  1345  00184E  0E01               	movlw	1
  1346  001850  6E02               	movwf	(??_read_byte+1)& (0+255),c
  1347  001852  2A01               	incf	??_read_byte,f,c
  1348  001854  D002               	goto	u504
  1349  001856                     u505:
  1350  001856  90D8               	bcf	status,0,c
  1351  001858  3602               	rlcf	??_read_byte+1,f,c
  1352  00185A                     u504:
  1353  00185A  2E01               	decfsz	??_read_byte,f,c
  1354  00185C  D7FC               	goto	u505
  1355  00185E  5002               	movf	??_read_byte+1,w,c
  1356  001860  1203               	iorwf	read_byte@result,f,c
  1357  001862                     l1167:
  1358                           
  1359                           ;ds18b20.c: 69:   _delay((unsigned long)((60)*(8000000/4000000.0)));
  1360  001862  0E28               	movlw	40
  1361  001864                     u2237:
  1362  001864  2EE8               	decfsz	wreg,f,c
  1363  001866  D7FE               	bra	u2237
  1364                           
  1365                           ;ds18b20.c: 70:   }
  1366  001868  2A04               	incf	read_byte@i,f,c
  1367  00186A  0E07               	movlw	7
  1368  00186C  6404               	cpfsgt	read_byte@i,c
  1369  00186E  D7E6               	goto	l33
  1370                           
  1371                           ;ds18b20.c: 71:  return result;
  1372  001870  5003               	movf	read_byte@result,w,c
  1373  001872  0012               	return		;funcret
  1374  001874                     __end_of_read_byte:
  1375                           	opt callstack 0
  1376                           
  1377 ;; *************** function _ow_reset *****************
  1378 ;; Defined at:
  1379 ;;		line 23 in file "ds18b20.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      unsigned char 
  1386 ;; Registers used:
  1387 ;;		wreg
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; This function calls:
  1400 ;;		Nothing
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text3
  1407  0018B6                     __ptext3:
  1408                           	opt callstack 0
  1409  0018B6                     _ow_reset:
  1410                           	opt callstack 30
  1411                           
  1412                           ;ds18b20.c: 25:     TRISBbits.TRISB0 = 0;
  1413                           
  1414                           ;incstack = 0
  1415  0018B6  9093               	bcf	3987,0,c	;volatile
  1416                           
  1417                           ;ds18b20.c: 26:  PORTBbits.RB0 = 0;
  1418  0018B8  9081               	bcf	3969,0,c	;volatile
  1419                           
  1420                           ;ds18b20.c: 27:  _delay((unsigned long)((480)*(8000000/4000000.0)));
  1421  0018BA  0EC0               	movlw	192
  1422  0018BC                     u2247:
  1423  0018BC  D000               	nop2	
  1424  0018BE  2EE8               	decfsz	wreg,f,c
  1425  0018C0  D7FD               	bra	u2247
  1426                           
  1427                           ;ds18b20.c: 28:  TRISBbits.TRISB0 = 1;
  1428  0018C2  8093               	bsf	3987,0,c	;volatile
  1429                           
  1430                           ;ds18b20.c: 29:  _delay((unsigned long)((60)*(8000000/4000000.0)));
  1431  0018C4  0E28               	movlw	40
  1432  0018C6                     u2257:
  1433  0018C6  2EE8               	decfsz	wreg,f,c
  1434  0018C8  D7FE               	bra	u2257
  1435                           
  1436                           ;ds18b20.c: 31:   if (PORTBbits.RB0 == 0)
  1437  0018CA  B081               	btfsc	3969,0,c	;volatile
  1438  0018CC  D006               	goto	l1153
  1439                           
  1440                           ;ds18b20.c: 32:   {;ds18b20.c: 33:   _delay((unsigned long)((480)*(8000000/4000000.0)));
  1441  0018CE  0EC0               	movlw	192
  1442  0018D0                     u2267:
  1443  0018D0  D000               	nop2	
  1444  0018D2  2EE8               	decfsz	wreg,f,c
  1445  0018D4  D7FD               	bra	u2267
  1446                           
  1447                           ;ds18b20.c: 34:   return 0;
  1448  0018D6  0E00               	movlw	0
  1449  0018D8  0012               	return	
  1450  0018DA                     l1153:
  1451                           
  1452                           ;ds18b20.c: 37:   {;ds18b20.c: 38:   _delay((unsigned long)((480)*(8000000/4000000.0)));
  1453  0018DA  0EC0               	movlw	192
  1454  0018DC                     u2277:
  1455  0018DC  D000               	nop2	
  1456  0018DE  2EE8               	decfsz	wreg,f,c
  1457  0018E0  D7FD               	bra	u2277
  1458                           
  1459                           ;ds18b20.c: 39:   return 1;
  1460  0018E2  0E01               	movlw	1
  1461  0018E4  0012               	return		;funcret
  1462  0018E6                     __end_of_ow_reset:
  1463                           	opt callstack 0
  1464                           
  1465 ;; *************** function _lcd_puts *****************
  1466 ;; Defined at:
  1467 ;;		line 91 in file "lcd.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  str             2    7[COMRAM] PTR unsigned char 
  1470 ;;		 -> STR_13(6), STR_12(14), STR_11(6), STR_10(14), 
  1471 ;;		 -> STR_9(6), STR_8(2), STR_7(14), STR_6(6), 
  1472 ;;		 -> STR_5(2), STR_4(14), STR_3(17), STR_2(17), 
  1473 ;;		 -> STR_1(18), 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  i               2   11[COMRAM] unsigned int 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         2       0       0       0       0       0       0
  1486 ;;      Locals:         2       0       0       0       0       0       0
  1487 ;;      Temps:          2       0       0       0       0       0       0
  1488 ;;      Totals:         6       0       0       0       0       0       0
  1489 ;;Total ram usage:        6 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    3
  1492 ;; This function calls:
  1493 ;;		_lcd_data
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text4
  1500  0017A2                     __ptext4:
  1501                           	opt callstack 0
  1502  0017A2                     _lcd_puts:
  1503                           	opt callstack 27
  1504                           
  1505                           ;lcd.c: 91: void lcd_puts(char *str);lcd.c: 92: {;lcd.c: 93:   unsigned int i=0;
  1506                           
  1507                           ;incstack = 0
  1508  0017A2  0E00               	movlw	0
  1509  0017A4  6E0D               	movwf	lcd_puts@i+1,c
  1510  0017A6  0E00               	movlw	0
  1511  0017A8  6E0C               	movwf	lcd_puts@i,c
  1512                           
  1513                           ;lcd.c: 94:  for(;str[i]!=0;i++)
  1514  0017AA  D010               	goto	l2053
  1515  0017AC                     l2049:
  1516                           
  1517                           ;lcd.c: 95:   lcd_data(str[i]);
  1518  0017AC  500C               	movf	lcd_puts@i,w,c
  1519  0017AE  2408               	addwf	lcd_puts@str,w,c
  1520  0017B0  6E0A               	movwf	??_lcd_puts& (0+255),c
  1521  0017B2  500D               	movf	lcd_puts@i+1,w,c
  1522  0017B4  2009               	addwfc	lcd_puts@str+1,w,c
  1523  0017B6  6E0B               	movwf	(??_lcd_puts+1)& (0+255),c
  1524  0017B8  C00A  FFF6         	movff	??_lcd_puts,tblptrl
  1525  0017BC  C00B  FFF7         	movff	??_lcd_puts+1,tblptrh
  1526  0017C0                     	if	0	;tblptru may be non-zero
  1527  0017C0                     	endif
  1528  0017C0                     	if	0	;tblptru may be non-zero
  1529  0017C0                     	endif
  1530  0017C0  0008               	tblrd		*
  1531  0017C2  50F5               	movf	tablat,w,c
  1532  0017C4  ECB3  F00C         	call	_lcd_data
  1533  0017C8  4A0C               	infsnz	lcd_puts@i,f,c
  1534  0017CA  2A0D               	incf	lcd_puts@i+1,f,c
  1535  0017CC                     l2053:
  1536  0017CC  500C               	movf	lcd_puts@i,w,c
  1537  0017CE  2408               	addwf	lcd_puts@str,w,c
  1538  0017D0  6E0A               	movwf	??_lcd_puts& (0+255),c
  1539  0017D2  500D               	movf	lcd_puts@i+1,w,c
  1540  0017D4  2009               	addwfc	lcd_puts@str+1,w,c
  1541  0017D6  6E0B               	movwf	(??_lcd_puts+1)& (0+255),c
  1542  0017D8  C00A  FFF6         	movff	??_lcd_puts,tblptrl
  1543  0017DC  C00B  FFF7         	movff	??_lcd_puts+1,tblptrh
  1544  0017E0                     	if	0	;tblptru may be non-zero
  1545  0017E0                     	endif
  1546  0017E0                     	if	0	;tblptru may be non-zero
  1547  0017E0                     	endif
  1548  0017E0  0008               	tblrd		*
  1549  0017E2  50F5               	movf	tablat,w,c
  1550  0017E4  0900               	iorlw	0
  1551  0017E6  B4D8               	btfsc	status,2,c
  1552  0017E8  0012               	return	
  1553  0017EA  D7E0               	goto	l2049
  1554  0017EC                     __end_of_lcd_puts:
  1555                           	opt callstack 0
  1556                           
  1557 ;; *************** function _lcd_init *****************
  1558 ;; Defined at:
  1559 ;;		line 72 in file "lcd.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1573 ;;      Params:         0       0       0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used:    1
  1579 ;; Hardware stack levels required when called:    2
  1580 ;; This function calls:
  1581 ;;		_delay
  1582 ;;		_lcd_com
  1583 ;;		_lcd_init_write
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text5
  1590  001622                     __ptext5:
  1591                           	opt callstack 0
  1592  001622                     _lcd_init:
  1593                           	opt callstack 28
  1594                           
  1595                           ;lcd.c: 74:  delay(300);
  1596                           
  1597                           ;incstack = 0
  1598  001622  0E01               	movlw	1
  1599  001624  6E02               	movwf	delay@j+1,c
  1600  001626  0E2C               	movlw	44
  1601  001628  6E01               	movwf	delay@j,c
  1602  00162A  EC86  F00C         	call	_delay	;wreg free
  1603                           
  1604                           ;lcd.c: 76:  delay(300);
  1605  00162E  0E01               	movlw	1
  1606  001630  6E02               	movwf	delay@j+1,c
  1607  001632  0E2C               	movlw	44
  1608  001634  6E01               	movwf	delay@j,c
  1609  001636  EC86  F00C         	call	_delay	;wreg free
  1610                           
  1611                           ;lcd.c: 77:  lcd_init_write(0x28);
  1612  00163A  0E28               	movlw	40
  1613  00163C  EC98  F00C         	call	_lcd_init_write
  1614                           
  1615                           ;lcd.c: 78:  delay(300);
  1616  001640  0E01               	movlw	1
  1617  001642  6E02               	movwf	delay@j+1,c
  1618  001644  0E2C               	movlw	44
  1619  001646  6E01               	movwf	delay@j,c
  1620  001648  EC86  F00C         	call	_delay	;wreg free
  1621                           
  1622                           ;lcd.c: 79:  lcd_com(0x0C);
  1623  00164C  0E0C               	movlw	12
  1624  00164E  EC54  F00B         	call	_lcd_com
  1625                           
  1626                           ;lcd.c: 81:  delay(300);
  1627  001652  0E01               	movlw	1
  1628  001654  6E02               	movwf	delay@j+1,c
  1629  001656  0E2C               	movlw	44
  1630  001658  6E01               	movwf	delay@j,c
  1631  00165A  EC86  F00C         	call	_delay	;wreg free
  1632                           
  1633                           ;lcd.c: 82:  lcd_com(4);
  1634  00165E  0E04               	movlw	4
  1635  001660  EC54  F00B         	call	_lcd_com
  1636                           
  1637                           ;lcd.c: 83:  delay(300);
  1638  001664  0E01               	movlw	1
  1639  001666  6E02               	movwf	delay@j+1,c
  1640  001668  0E2C               	movlw	44
  1641  00166A  6E01               	movwf	delay@j,c
  1642  00166C  EC86  F00C         	call	_delay	;wreg free
  1643                           
  1644                           ;lcd.c: 84:  lcd_com(0x85);
  1645  001670  0E85               	movlw	133
  1646  001672  EC54  F00B         	call	_lcd_com
  1647                           
  1648                           ;lcd.c: 85:  delay(300);
  1649  001676  0E01               	movlw	1
  1650  001678  6E02               	movwf	delay@j+1,c
  1651  00167A  0E2C               	movlw	44
  1652  00167C  6E01               	movwf	delay@j,c
  1653  00167E  EC86  F00C         	call	_delay	;wreg free
  1654                           
  1655                           ;lcd.c: 86:  lcd_com(6);
  1656  001682  0E06               	movlw	6
  1657  001684  EC54  F00B         	call	_lcd_com
  1658                           
  1659                           ;lcd.c: 87:  delay(300);
  1660  001688  0E01               	movlw	1
  1661  00168A  6E02               	movwf	delay@j+1,c
  1662  00168C  0E2C               	movlw	44
  1663  00168E  6E01               	movwf	delay@j,c
  1664  001690  EC86  F00C         	call	_delay	;wreg free
  1665                           
  1666                           ;lcd.c: 88:  lcd_com(1);
  1667  001694  0E01               	movlw	1
  1668  001696  EC54  F00B         	call	_lcd_com
  1669                           
  1670                           ;lcd.c: 89:  delay(300);
  1671  00169A  0E01               	movlw	1
  1672  00169C  6E02               	movwf	delay@j+1,c
  1673  00169E  0E2C               	movlw	44
  1674  0016A0  6E01               	movwf	delay@j,c
  1675  0016A2  EC86  F00C         	call	_delay	;wreg free
  1676  0016A6  0012               	return		;funcret
  1677  0016A8                     __end_of_lcd_init:
  1678                           	opt callstack 0
  1679                           
  1680 ;; *************** function _lcd_init_write *****************
  1681 ;; Defined at:
  1682 ;;		line 28 in file "lcd.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  a               1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  a               1    4[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1696 ;;      Params:         0       0       0       0       0       0       0
  1697 ;;      Locals:         1       0       0       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0       0       0
  1699 ;;      Totals:         1       0       0       0       0       0       0
  1700 ;;Total ram usage:        1 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    1
  1703 ;; This function calls:
  1704 ;;		_delay
  1705 ;; This function is called by:
  1706 ;;		_lcd_init
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text6
  1711  001930                     __ptext6:
  1712                           	opt callstack 0
  1713  001930                     _lcd_init_write:
  1714                           	opt callstack 28
  1715                           
  1716                           ;incstack = 0
  1717                           ;lcd_init_write@a stored from wreg
  1718  001930  6E05               	movwf	lcd_init_write@a,c
  1719                           
  1720                           ;lcd.c: 28: void lcd_init_write(unsigned char a);lcd.c: 29: {;lcd.c: 30:  PORTCbits.RC0=
      +                          0;
  1721  001932  9082               	bcf	3970,0,c	;volatile
  1722                           
  1723                           ;lcd.c: 31:  PORTCbits.RC1=0;
  1724  001934  9282               	bcf	3970,1,c	;volatile
  1725                           
  1726                           ;lcd.c: 32:  PORTD=a;
  1727  001936  C005  FF83         	movff	lcd_init_write@a,3971	;volatile
  1728                           
  1729                           ;lcd.c: 33:  PORTCbits.RC2=1;
  1730  00193A  8482               	bsf	3970,2,c	;volatile
  1731                           
  1732                           ;lcd.c: 34:  delay(300);
  1733  00193C  0E01               	movlw	1
  1734  00193E  6E02               	movwf	delay@j+1,c
  1735  001940  0E2C               	movlw	44
  1736  001942  6E01               	movwf	delay@j,c
  1737  001944  EC86  F00C         	call	_delay	;wreg free
  1738                           
  1739                           ;lcd.c: 35:  PORTCbits.RC2=0;
  1740  001948  9482               	bcf	3970,2,c	;volatile
  1741  00194A  0012               	return		;funcret
  1742  00194C                     __end_of_lcd_init_write:
  1743                           	opt callstack 0
  1744                           
  1745 ;; *************** function _lcd_bcd *****************
  1746 ;; Defined at:
  1747 ;;		line 121 in file "lcd.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  uc_digit        1    wreg     unsigned char 
  1750 ;;  ui_number       2   49[COMRAM] unsigned int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  uc_digit        1    0[COMRAM] unsigned char 
  1753 ;;  ui_decimal     10   51[COMRAM] unsigned int [5]
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1763 ;;      Params:         2       0       0       0       0       0       0
  1764 ;;      Locals:        10       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0
  1766 ;;      Totals:        12       0       0       0       0       0       0
  1767 ;;Total ram usage:       12 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    3
  1770 ;; This function calls:
  1771 ;;		___lwdiv
  1772 ;;		___lwmod
  1773 ;;		_lcd_data
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text7
  1780  0011E4                     __ptext7:
  1781                           	opt callstack 0
  1782  0011E4                     _lcd_bcd:
  1783                           	opt callstack 27
  1784                           
  1785                           ;lcd.c: 121: void lcd_bcd(unsigned char uc_digit, unsigned int ui_number);lcd.c: 122: {;
      +                          lcd.c: 126:  unsigned int ui_decimal[5] ={ 0 };
  1786                           
  1787                           ;incstack = 0
  1788  0011E4  EE20  F034         	lfsr	2,lcd_bcd@ui_decimal
  1789  0011E8  0E09               	movlw	9
  1790  0011EA                     u1651:
  1791  0011EA  6ADE               	clrf	postinc2,c
  1792  0011EC  06E8               	decf	wreg,f,c
  1793  0011EE  E2FD               	bc	u1651
  1794                           
  1795                           ;lcd.c: 128:   ui_decimal[4] = ui_number/10000;
  1796  0011F0  C032  F001         	movff	lcd_bcd@ui_number,___lwdiv@dividend
  1797  0011F4  C033  F002         	movff	lcd_bcd@ui_number+1,___lwdiv@dividend+1
  1798  0011F8  0E27               	movlw	39
  1799  0011FA  6E04               	movwf	___lwdiv@divisor+1,c
  1800  0011FC  0E10               	movlw	16
  1801  0011FE  6E03               	movwf	___lwdiv@divisor,c
  1802  001200  EC82  F00B         	call	___lwdiv	;wreg free
  1803  001204  C001  F03C         	movff	?___lwdiv,lcd_bcd@ui_decimal+8
  1804  001208  C002  F03D         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+9
  1805                           
  1806                           ;lcd.c: 129:   ui_decimal[3] = ui_number%10000;
  1807  00120C  C032  F001         	movff	lcd_bcd@ui_number,___lwmod@dividend
  1808  001210  C033  F002         	movff	lcd_bcd@ui_number+1,___lwmod@dividend+1
  1809  001214  0E27               	movlw	39
  1810  001216  6E04               	movwf	___lwmod@divisor+1,c
  1811  001218  0E10               	movlw	16
  1812  00121A  6E03               	movwf	___lwmod@divisor,c
  1813  00121C  EC3A  F00C         	call	___lwmod	;wreg free
  1814  001220  C001  F03A         	movff	?___lwmod,lcd_bcd@ui_decimal+6
  1815  001224  C002  F03B         	movff	?___lwmod+1,lcd_bcd@ui_decimal+7
  1816                           
  1817                           ;lcd.c: 130:   ui_decimal[2] = ui_decimal[3]%1000;
  1818  001228  C03A  F001         	movff	lcd_bcd@ui_decimal+6,___lwmod@dividend
  1819  00122C  C03B  F002         	movff	lcd_bcd@ui_decimal+7,___lwmod@dividend+1
  1820  001230  0E03               	movlw	3
  1821  001232  6E04               	movwf	___lwmod@divisor+1,c
  1822  001234  0EE8               	movlw	232
  1823  001236  6E03               	movwf	___lwmod@divisor,c
  1824  001238  EC3A  F00C         	call	___lwmod	;wreg free
  1825  00123C  C001  F038         	movff	?___lwmod,lcd_bcd@ui_decimal+4
  1826  001240  C002  F039         	movff	?___lwmod+1,lcd_bcd@ui_decimal+5
  1827                           
  1828                           ;lcd.c: 131:   ui_decimal[3] = ui_decimal[3]/1000;
  1829  001244  C03A  F001         	movff	lcd_bcd@ui_decimal+6,___lwdiv@dividend
  1830  001248  C03B  F002         	movff	lcd_bcd@ui_decimal+7,___lwdiv@dividend+1
  1831  00124C  0E03               	movlw	3
  1832  00124E  6E04               	movwf	___lwdiv@divisor+1,c
  1833  001250  0EE8               	movlw	232
  1834  001252  6E03               	movwf	___lwdiv@divisor,c
  1835  001254  EC82  F00B         	call	___lwdiv	;wreg free
  1836  001258  C001  F03A         	movff	?___lwdiv,lcd_bcd@ui_decimal+6
  1837  00125C  C002  F03B         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+7
  1838                           
  1839                           ;lcd.c: 132:   ui_decimal[1] = ui_decimal[2]%100;
  1840  001260  C038  F001         	movff	lcd_bcd@ui_decimal+4,___lwmod@dividend
  1841  001264  C039  F002         	movff	lcd_bcd@ui_decimal+5,___lwmod@dividend+1
  1842  001268  0E00               	movlw	0
  1843  00126A  6E04               	movwf	___lwmod@divisor+1,c
  1844  00126C  0E64               	movlw	100
  1845  00126E  6E03               	movwf	___lwmod@divisor,c
  1846  001270  EC3A  F00C         	call	___lwmod	;wreg free
  1847  001274  C001  F036         	movff	?___lwmod,lcd_bcd@ui_decimal+2
  1848  001278  C002  F037         	movff	?___lwmod+1,lcd_bcd@ui_decimal+3
  1849                           
  1850                           ;lcd.c: 133:   ui_decimal[2] = ui_decimal[2]/100;
  1851  00127C  C038  F001         	movff	lcd_bcd@ui_decimal+4,___lwdiv@dividend
  1852  001280  C039  F002         	movff	lcd_bcd@ui_decimal+5,___lwdiv@dividend+1
  1853  001284  0E00               	movlw	0
  1854  001286  6E04               	movwf	___lwdiv@divisor+1,c
  1855  001288  0E64               	movlw	100
  1856  00128A  6E03               	movwf	___lwdiv@divisor,c
  1857  00128C  EC82  F00B         	call	___lwdiv	;wreg free
  1858  001290  C001  F038         	movff	?___lwdiv,lcd_bcd@ui_decimal+4
  1859  001294  C002  F039         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+5
  1860                           
  1861                           ;lcd.c: 134:   ui_decimal[0] = ui_decimal[1]%10;
  1862  001298  C036  F001         	movff	lcd_bcd@ui_decimal+2,___lwmod@dividend
  1863  00129C  C037  F002         	movff	lcd_bcd@ui_decimal+3,___lwmod@dividend+1
  1864  0012A0  0E00               	movlw	0
  1865  0012A2  6E04               	movwf	___lwmod@divisor+1,c
  1866  0012A4  0E0A               	movlw	10
  1867  0012A6  6E03               	movwf	___lwmod@divisor,c
  1868  0012A8  EC3A  F00C         	call	___lwmod	;wreg free
  1869  0012AC  C001  F034         	movff	?___lwmod,lcd_bcd@ui_decimal
  1870  0012B0  C002  F035         	movff	?___lwmod+1,lcd_bcd@ui_decimal+1
  1871                           
  1872                           ;lcd.c: 135:   ui_decimal[1] = ui_decimal[1]/10;
  1873  0012B4  C036  F001         	movff	lcd_bcd@ui_decimal+2,___lwdiv@dividend
  1874  0012B8  C037  F002         	movff	lcd_bcd@ui_decimal+3,___lwdiv@dividend+1
  1875  0012BC  0E00               	movlw	0
  1876  0012BE  6E04               	movwf	___lwdiv@divisor+1,c
  1877  0012C0  0E0A               	movlw	10
  1878  0012C2  6E03               	movwf	___lwdiv@divisor,c
  1879  0012C4  EC82  F00B         	call	___lwdiv	;wreg free
  1880  0012C8  C001  F036         	movff	?___lwdiv,lcd_bcd@ui_decimal+2
  1881  0012CC  C002  F037         	movff	?___lwdiv+1,lcd_bcd@ui_decimal+3
  1882                           
  1883                           ;lcd.c: 138:    if (ui_decimal[4]==0){
  1884  0012D0  503C               	movf	lcd_bcd@ui_decimal+8,w,c
  1885  0012D2  103D               	iorwf	lcd_bcd@ui_decimal+9,w,c
  1886  0012D4  A4D8               	btfss	status,2,c
  1887  0012D6  D028               	goto	l2081
  1888                           
  1889                           ;lcd.c: 139:     if (ui_decimal[3]==0){
  1890  0012D8  503A               	movf	lcd_bcd@ui_decimal+6,w,c
  1891  0012DA  103B               	iorwf	lcd_bcd@ui_decimal+7,w,c
  1892  0012DC  A4D8               	btfss	status,2,c
  1893  0012DE  D010               	goto	l2079
  1894                           
  1895                           ;lcd.c: 142:      lcd_data(ui_decimal[2] + 0x30);
  1896  0012E0  5038               	movf	lcd_bcd@ui_decimal+4,w,c
  1897  0012E2  0F30               	addlw	48
  1898  0012E4  ECB3  F00C         	call	_lcd_data
  1899                           
  1900                           ;lcd.c: 143:      lcd_data('.');
  1901  0012E8  0E2E               	movlw	46
  1902  0012EA  ECB3  F00C         	call	_lcd_data
  1903                           
  1904                           ;lcd.c: 144:      lcd_data(ui_decimal[1] + 0x30);
  1905  0012EE  5036               	movf	lcd_bcd@ui_decimal+2,w,c
  1906  0012F0  0F30               	addlw	48
  1907  0012F2  ECB3  F00C         	call	_lcd_data
  1908                           
  1909                           ;lcd.c: 145:      lcd_data(ui_decimal[0] + 0x30);
  1910  0012F6  5034               	movf	lcd_bcd@ui_decimal,w,c
  1911  0012F8  0F30               	addlw	48
  1912  0012FA  ECB3  F00C         	call	_lcd_data
  1913                           
  1914                           ;lcd.c: 146:     }
  1915  0012FE  0012               	return	
  1916  001300                     l2079:
  1917                           
  1918                           ;lcd.c: 149:      lcd_data(ui_decimal[3] + 0x30);
  1919  001300  503A               	movf	lcd_bcd@ui_decimal+6,w,c
  1920  001302  0F30               	addlw	48
  1921  001304  ECB3  F00C         	call	_lcd_data
  1922                           
  1923                           ;lcd.c: 150:      lcd_data(ui_decimal[2] + 0x30);
  1924  001308  5038               	movf	lcd_bcd@ui_decimal+4,w,c
  1925  00130A  0F30               	addlw	48
  1926  00130C  ECB3  F00C         	call	_lcd_data
  1927                           
  1928                           ;lcd.c: 151:      lcd_data('.');
  1929  001310  0E2E               	movlw	46
  1930  001312  ECB3  F00C         	call	_lcd_data
  1931                           
  1932                           ;lcd.c: 152:      lcd_data(ui_decimal[1] + 0x30);
  1933  001316  5036               	movf	lcd_bcd@ui_decimal+2,w,c
  1934  001318  0F30               	addlw	48
  1935  00131A  ECB3  F00C         	call	_lcd_data
  1936                           
  1937                           ;lcd.c: 153:      lcd_data(ui_decimal[0] + 0x30);
  1938  00131E  5034               	movf	lcd_bcd@ui_decimal,w,c
  1939  001320  0F30               	addlw	48
  1940  001322  ECB3  F00C         	call	_lcd_data
  1941  001326  0012               	return	
  1942  001328                     l2081:
  1943                           
  1944                           ;lcd.c: 157:     lcd_data(ui_decimal[4] + 0x30);
  1945  001328  503C               	movf	lcd_bcd@ui_decimal+8,w,c
  1946  00132A  0F30               	addlw	48
  1947  00132C  ECB3  F00C         	call	_lcd_data
  1948                           
  1949                           ;lcd.c: 158:     lcd_data(ui_decimal[3] + 0x30);
  1950  001330  503A               	movf	lcd_bcd@ui_decimal+6,w,c
  1951  001332  0F30               	addlw	48
  1952  001334  ECB3  F00C         	call	_lcd_data
  1953                           
  1954                           ;lcd.c: 159:     lcd_data(ui_decimal[2] + 0x30);
  1955  001338  5038               	movf	lcd_bcd@ui_decimal+4,w,c
  1956  00133A  0F30               	addlw	48
  1957  00133C  ECB3  F00C         	call	_lcd_data
  1958                           
  1959                           ;lcd.c: 160:     lcd_data('.');
  1960  001340  0E2E               	movlw	46
  1961  001342  ECB3  F00C         	call	_lcd_data
  1962                           
  1963                           ;lcd.c: 161:     lcd_data(ui_decimal[1] + 0x30);
  1964  001346  5036               	movf	lcd_bcd@ui_decimal+2,w,c
  1965  001348  0F30               	addlw	48
  1966  00134A  ECB3  F00C         	call	_lcd_data
  1967                           
  1968                           ;lcd.c: 162:     lcd_data(ui_decimal[0] + 0x30);
  1969  00134E  5034               	movf	lcd_bcd@ui_decimal,w,c
  1970  001350  0F30               	addlw	48
  1971  001352  ECB3  F00C         	call	_lcd_data
  1972  001356  0012               	return		;funcret
  1973  001358                     __end_of_lcd_bcd:
  1974                           	opt callstack 0
  1975                           
  1976 ;; *************** function _lcd_data *****************
  1977 ;; Defined at:
  1978 ;;		line 66 in file "lcd.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  a               1    wreg     unsigned char 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  a               1    6[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1992 ;;      Params:         0       0       0       0       0       0       0
  1993 ;;      Locals:         1       0       0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0
  1995 ;;      Totals:         1       0       0       0       0       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		_lcd_com
  2001 ;; This function is called by:
  2002 ;;		_lcd_puts
  2003 ;;		_lcd_bcd
  2004 ;;		_main
  2005 ;;		_hex2lcd
  2006 ;;		_LCD_ScrollMessage
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text8
  2011  001966                     __ptext8:
  2012                           	opt callstack 0
  2013  001966                     _lcd_data:
  2014                           	opt callstack 27
  2015                           
  2016                           ;incstack = 0
  2017                           ;lcd_data@a stored from wreg
  2018  001966  6E07               	movwf	lcd_data@a,c
  2019                           
  2020                           ;lcd.c: 66: void lcd_data(unsigned char a);lcd.c: 67: {;lcd.c: 68:  status=1;
  2021  001968  0E00               	movlw	0
  2022  00196A  6E67               	movwf	_status+1,c
  2023  00196C  0E01               	movlw	1
  2024  00196E  6E66               	movwf	_status,c
  2025                           
  2026                           ;lcd.c: 69:  PORTCbits.RC0=1;
  2027  001970  8082               	bsf	3970,0,c	;volatile
  2028                           
  2029                           ;lcd.c: 70:  lcd_com(a);
  2030  001972  5007               	movf	lcd_data@a,w,c
  2031  001974  EC54  F00B         	call	_lcd_com
  2032  001978  0012               	return		;funcret
  2033  00197A                     __end_of_lcd_data:
  2034                           	opt callstack 0
  2035                           
  2036 ;; *************** function _lcd_com *****************
  2037 ;; Defined at:
  2038 ;;		line 39 in file "lcd.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  a               1    wreg     unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  a               1    4[COMRAM] unsigned char 
  2043 ;;  temp            1    5[COMRAM] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2053 ;;      Params:         0       0       0       0       0       0       0
  2054 ;;      Locals:         2       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0
  2056 ;;      Totals:         2       0       0       0       0       0       0
  2057 ;;Total ram usage:        2 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		_delay
  2062 ;; This function is called by:
  2063 ;;		_lcd_data
  2064 ;;		_lcd_init
  2065 ;;		_main
  2066 ;;		_LCD_ScrollMessage
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text9
  2071  0016A8                     __ptext9:
  2072                           	opt callstack 0
  2073  0016A8                     _lcd_com:
  2074                           	opt callstack 27
  2075                           
  2076                           ;incstack = 0
  2077                           ;lcd_com@a stored from wreg
  2078  0016A8  6E05               	movwf	lcd_com@a,c
  2079                           
  2080                           ;lcd.c: 39: void lcd_com(unsigned char a);lcd.c: 40: {;lcd.c: 41:  unsigned char temp;;l
      +                          cd.c: 42:  if(status)
  2081  0016AA  5066               	movf	_status,w,c
  2082  0016AC  1067               	iorwf	_status+1,w,c
  2083  0016AE  B4D8               	btfsc	status,2,c
  2084  0016B0  D005               	goto	l65
  2085                           
  2086                           ;lcd.c: 43:  {;lcd.c: 44:   status=0;
  2087  0016B2  0E00               	movlw	0
  2088  0016B4  6E67               	movwf	_status+1,c
  2089  0016B6  0E00               	movlw	0
  2090  0016B8  6E66               	movwf	_status,c
  2091                           
  2092                           ;lcd.c: 45:   goto next;
  2093  0016BA  D001               	goto	l66
  2094  0016BC                     l65:
  2095                           
  2096                           ;lcd.c: 47:  PORTCbits.RC0=0;
  2097  0016BC  9082               	bcf	3970,0,c	;volatile
  2098  0016BE                     l66:
  2099                           
  2100                           ;lcd.c: 49:  PORTCbits.RC1=0;
  2101  0016BE  9282               	bcf	3970,1,c	;volatile
  2102                           
  2103                           ;lcd.c: 50:  temp=a;
  2104  0016C0  C005  F006         	movff	lcd_com@a,lcd_com@temp
  2105                           
  2106                           ;lcd.c: 51:  temp&=0xf0;
  2107  0016C4  0EF0               	movlw	240
  2108  0016C6  1606               	andwf	lcd_com@temp,f,c
  2109                           
  2110                           ;lcd.c: 52:  PORTD&=0x0f;
  2111  0016C8  0E0F               	movlw	15
  2112  0016CA  1683               	andwf	3971,f,c	;volatile
  2113                           
  2114                           ;lcd.c: 53:  PORTD|=temp;
  2115  0016CC  5006               	movf	lcd_com@temp,w,c	;volatile
  2116  0016CE  1283               	iorwf	3971,f,c	;volatile
  2117                           
  2118                           ;lcd.c: 54:  PORTCbits.RC2=1;
  2119  0016D0  8482               	bsf	3970,2,c	;volatile
  2120                           
  2121                           ;lcd.c: 55:  delay(300);
  2122  0016D2  0E01               	movlw	1
  2123  0016D4  6E02               	movwf	delay@j+1,c
  2124  0016D6  0E2C               	movlw	44
  2125  0016D8  6E01               	movwf	delay@j,c
  2126  0016DA  EC86  F00C         	call	_delay	;wreg free
  2127                           
  2128                           ;lcd.c: 56:  PORTCbits.RC2=0;
  2129  0016DE  9482               	bcf	3970,2,c	;volatile
  2130                           
  2131                           ;lcd.c: 57:  temp=a<<4;
  2132  0016E0  3805               	swapf	lcd_com@a,w,c
  2133  0016E2  0BF0               	andlw	240
  2134  0016E4  6E06               	movwf	lcd_com@temp,c
  2135                           
  2136                           ;lcd.c: 58:  temp&=0xf0;
  2137  0016E6  0EF0               	movlw	240
  2138  0016E8  1606               	andwf	lcd_com@temp,f,c
  2139                           
  2140                           ;lcd.c: 59:  PORTD&=0x0f;
  2141  0016EA  0E0F               	movlw	15
  2142  0016EC  1683               	andwf	3971,f,c	;volatile
  2143                           
  2144                           ;lcd.c: 60:  PORTD|=temp;
  2145  0016EE  5006               	movf	lcd_com@temp,w,c	;volatile
  2146  0016F0  1283               	iorwf	3971,f,c	;volatile
  2147                           
  2148                           ;lcd.c: 61:  PORTCbits.RC2=1;
  2149  0016F2  8482               	bsf	3970,2,c	;volatile
  2150                           
  2151                           ;lcd.c: 62:  delay(300);
  2152  0016F4  0E01               	movlw	1
  2153  0016F6  6E02               	movwf	delay@j+1,c
  2154  0016F8  0E2C               	movlw	44
  2155  0016FA  6E01               	movwf	delay@j,c
  2156  0016FC  EC86  F00C         	call	_delay	;wreg free
  2157                           
  2158                           ;lcd.c: 63:  PORTCbits.RC2=0;
  2159  001700  9482               	bcf	3970,2,c	;volatile
  2160  001702  0012               	return		;funcret
  2161  001704                     __end_of_lcd_com:
  2162                           	opt callstack 0
  2163                           
  2164 ;; *************** function _delay *****************
  2165 ;; Defined at:
  2166 ;;		line 22 in file "lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  j               2    0[COMRAM] unsigned int 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  i               2    2[COMRAM] unsigned int 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         2       0       0       0       0       0       0
  2181 ;;      Locals:         2       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         4       0       0       0       0       0       0
  2184 ;;Total ram usage:        4 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_lcd_init_write
  2190 ;;		_lcd_com
  2191 ;;		_lcd_init
  2192 ;;		_LCD_ScrollMessage
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text10
  2197  00190C                     __ptext10:
  2198                           	opt callstack 0
  2199  00190C                     _delay:
  2200                           	opt callstack 27
  2201                           
  2202                           ;lcd.c: 22: void delay(unsigned int j);lcd.c: 23: {;lcd.c: 24:  unsigned int i=0;
  2203                           
  2204                           ;incstack = 0
  2205  00190C  0E00               	movlw	0
  2206  00190E  6E04               	movwf	delay@i+1,c
  2207  001910  0E00               	movlw	0
  2208  001912  6E03               	movwf	delay@i,c
  2209                           
  2210                           ;lcd.c: 25:  for(i=0;i<j;i++);
  2211  001914  0E00               	movlw	0
  2212  001916  6E04               	movwf	delay@i+1,c
  2213  001918  0E00               	movlw	0
  2214  00191A  6E03               	movwf	delay@i,c
  2215  00191C  D002               	goto	l1761
  2216  00191E                     l1759:
  2217  00191E  4A03               	infsnz	delay@i,f,c
  2218  001920  2A04               	incf	delay@i+1,f,c
  2219  001922                     l1761:
  2220  001922  5001               	movf	delay@j,w,c
  2221  001924  5C03               	subwf	delay@i,w,c
  2222  001926  5002               	movf	delay@j+1,w,c
  2223  001928  5804               	subwfb	delay@i+1,w,c
  2224  00192A  B0D8               	btfsc	status,0,c
  2225  00192C  0012               	return	
  2226  00192E  D7F7               	goto	l1759
  2227  001930                     __end_of_delay:
  2228                           	opt callstack 0
  2229                           
  2230 ;; *************** function ___lwmod *****************
  2231 ;; Defined at:
  2232 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  dividend        2    0[COMRAM] unsigned int 
  2235 ;;  divisor         2    2[COMRAM] unsigned int 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  counter         1    4[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  2    0[COMRAM] unsigned int 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2247 ;;      Params:         4       0       0       0       0       0       0
  2248 ;;      Locals:         1       0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0
  2250 ;;      Totals:         5       0       0       0       0       0       0
  2251 ;;Total ram usage:        5 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_lcd_bcd
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text11
  2261  001874                     __ptext11:
  2262                           	opt callstack 0
  2263  001874                     ___lwmod:
  2264                           	opt callstack 29
  2265                           
  2266                           ;incstack = 0
  2267  001874  5003               	movf	___lwmod@divisor,w,c
  2268  001876  1004               	iorwf	___lwmod@divisor+1,w,c
  2269  001878  B4D8               	btfsc	status,2,c
  2270  00187A  D018               	goto	l679
  2271  00187C  0E01               	movlw	1
  2272  00187E  6E05               	movwf	___lwmod@counter,c
  2273  001880  D004               	goto	l2035
  2274  001882                     l2033:
  2275  001882  90D8               	bcf	status,0,c
  2276  001884  3603               	rlcf	___lwmod@divisor,f,c
  2277  001886  3604               	rlcf	___lwmod@divisor+1,f,c
  2278  001888  2A05               	incf	___lwmod@counter,f,c
  2279  00188A                     l2035:
  2280  00188A  AE04               	btfss	___lwmod@divisor+1,7,c
  2281  00188C  D7FA               	goto	l2033
  2282  00188E                     u1620:
  2283  00188E  5003               	movf	___lwmod@divisor,w,c
  2284  001890  5C01               	subwf	___lwmod@dividend,w,c
  2285  001892  5004               	movf	___lwmod@divisor+1,w,c
  2286  001894  5802               	subwfb	___lwmod@dividend+1,w,c
  2287  001896  A0D8               	btfss	status,0,c
  2288  001898  D004               	goto	l2041
  2289  00189A  5003               	movf	___lwmod@divisor,w,c
  2290  00189C  5E01               	subwf	___lwmod@dividend,f,c
  2291  00189E  5004               	movf	___lwmod@divisor+1,w,c
  2292  0018A0  5A02               	subwfb	___lwmod@dividend+1,f,c
  2293  0018A2                     l2041:
  2294  0018A2  90D8               	bcf	status,0,c
  2295  0018A4  3204               	rrcf	___lwmod@divisor+1,f,c
  2296  0018A6  3203               	rrcf	___lwmod@divisor,f,c
  2297  0018A8  2E05               	decfsz	___lwmod@counter,f,c
  2298  0018AA  D7F1               	goto	u1620
  2299  0018AC                     l679:
  2300  0018AC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2301  0018B0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2302  0018B4  0012               	return		;funcret
  2303  0018B6                     __end_of___lwmod:
  2304                           	opt callstack 0
  2305                           
  2306 ;; *************** function ___lwdiv *****************
  2307 ;; Defined at:
  2308 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  dividend        2    0[COMRAM] unsigned int 
  2311 ;;  divisor         2    2[COMRAM] unsigned int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  quotient        2    4[COMRAM] unsigned int 
  2314 ;;  counter         1    6[COMRAM] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    0[COMRAM] unsigned int 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         4       0       0       0       0       0       0
  2325 ;;      Locals:         3       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         7       0       0       0       0       0       0
  2328 ;;Total ram usage:        7 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_lcd_bcd
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text12
  2338  001704                     __ptext12:
  2339                           	opt callstack 0
  2340  001704                     ___lwdiv:
  2341                           	opt callstack 29
  2342                           
  2343                           ;incstack = 0
  2344  001704  0E00               	movlw	0
  2345  001706  6E06               	movwf	___lwdiv@quotient+1,c
  2346  001708  0E00               	movlw	0
  2347  00170A  6E05               	movwf	___lwdiv@quotient,c
  2348  00170C  5003               	movf	___lwdiv@divisor,w,c
  2349  00170E  1004               	iorwf	___lwdiv@divisor+1,w,c
  2350  001710  B4D8               	btfsc	status,2,c
  2351  001712  D01C               	goto	l669
  2352  001714  0E01               	movlw	1
  2353  001716  6E07               	movwf	___lwdiv@counter,c
  2354  001718  D004               	goto	l2015
  2355  00171A                     l2013:
  2356  00171A  90D8               	bcf	status,0,c
  2357  00171C  3603               	rlcf	___lwdiv@divisor,f,c
  2358  00171E  3604               	rlcf	___lwdiv@divisor+1,f,c
  2359  001720  2A07               	incf	___lwdiv@counter,f,c
  2360  001722                     l2015:
  2361  001722  AE04               	btfss	___lwdiv@divisor+1,7,c
  2362  001724  D7FA               	goto	l2013
  2363  001726                     u1590:
  2364  001726  90D8               	bcf	status,0,c
  2365  001728  3605               	rlcf	___lwdiv@quotient,f,c
  2366  00172A  3606               	rlcf	___lwdiv@quotient+1,f,c
  2367  00172C  5003               	movf	___lwdiv@divisor,w,c
  2368  00172E  5C01               	subwf	___lwdiv@dividend,w,c
  2369  001730  5004               	movf	___lwdiv@divisor+1,w,c
  2370  001732  5802               	subwfb	___lwdiv@dividend+1,w,c
  2371  001734  A0D8               	btfss	status,0,c
  2372  001736  D005               	goto	l2025
  2373  001738  5003               	movf	___lwdiv@divisor,w,c
  2374  00173A  5E01               	subwf	___lwdiv@dividend,f,c
  2375  00173C  5004               	movf	___lwdiv@divisor+1,w,c
  2376  00173E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2377  001740  8005               	bsf	___lwdiv@quotient,0,c
  2378  001742                     l2025:
  2379  001742  90D8               	bcf	status,0,c
  2380  001744  3204               	rrcf	___lwdiv@divisor+1,f,c
  2381  001746  3203               	rrcf	___lwdiv@divisor,f,c
  2382  001748  2E07               	decfsz	___lwdiv@counter,f,c
  2383  00174A  D7ED               	goto	u1590
  2384  00174C                     l669:
  2385  00174C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2386  001750  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2387  001754  0012               	return		;funcret
  2388  001756                     __end_of___lwdiv:
  2389                           	opt callstack 0
  2390                           
  2391 ;; *************** function ___xxtofl *****************
  2392 ;; Defined at:
  2393 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  sign            1    wreg     unsigned char 
  2396 ;;  val             4    0[COMRAM] long 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  sign            1    8[COMRAM] unsigned char 
  2399 ;;  arg             4   10[COMRAM] unsigned long 
  2400 ;;  exp             1    9[COMRAM] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  4    0[COMRAM] unsigned char 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         4       0       0       0       0       0       0
  2411 ;;      Locals:         6       0       0       0       0       0       0
  2412 ;;      Temps:          4       0       0       0       0       0       0
  2413 ;;      Totals:        14       0       0       0       0       0       0
  2414 ;;Total ram usage:       14 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text13
  2424  001358                     __ptext13:
  2425                           	opt callstack 0
  2426  001358                     ___xxtofl:
  2427                           	opt callstack 30
  2428                           
  2429                           ;incstack = 0
  2430                           ;___xxtofl@sign stored from wreg
  2431  001358  6E09               	movwf	___xxtofl@sign,c
  2432  00135A  5009               	movf	___xxtofl@sign,w,c
  2433  00135C  A4D8               	btfss	status,2,c
  2434  00135E  AE04               	btfss	___xxtofl@val+3,7,c
  2435  001360  D01A               	goto	l833
  2436  001362  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2437  001366  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2438  00136A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2439  00136E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2440  001372  1E05               	comf	??___xxtofl,f,c
  2441  001374  1E06               	comf	??___xxtofl+1,f,c
  2442  001376  1E07               	comf	??___xxtofl+2,f,c
  2443  001378  1E08               	comf	??___xxtofl+3,f,c
  2444  00137A  2A05               	incf	??___xxtofl,f,c
  2445  00137C  0E00               	movlw	0
  2446  00137E  2206               	addwfc	??___xxtofl+1,f,c
  2447  001380  2207               	addwfc	??___xxtofl+2,f,c
  2448  001382  2208               	addwfc	??___xxtofl+3,f,c
  2449  001384  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2450  001388  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2451  00138C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2452  001390  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2453  001394  D008               	goto	l2297
  2454  001396                     l833:
  2455  001396  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2456  00139A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2457  00139E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2458  0013A2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2459  0013A6                     l2297:
  2460  0013A6  5001               	movf	___xxtofl@val,w,c
  2461  0013A8  1002               	iorwf	___xxtofl@val+1,w,c
  2462  0013AA  1003               	iorwf	___xxtofl@val+2,w,c
  2463  0013AC  1004               	iorwf	___xxtofl@val+3,w,c
  2464  0013AE  A4D8               	btfss	status,2,c
  2465  0013B0  D009               	goto	l2303
  2466  0013B2  0E00               	movlw	0
  2467  0013B4  6E01               	movwf	?___xxtofl,c
  2468  0013B6  0E00               	movlw	0
  2469  0013B8  6E02               	movwf	?___xxtofl+1,c
  2470  0013BA  0E00               	movlw	0
  2471  0013BC  6E03               	movwf	?___xxtofl+2,c
  2472  0013BE  0E00               	movlw	0
  2473  0013C0  6E04               	movwf	?___xxtofl+3,c
  2474  0013C2  0012               	return	
  2475  0013C4                     l2303:
  2476  0013C4  0E96               	movlw	150
  2477  0013C6  6E0A               	movwf	___xxtofl@exp,c
  2478  0013C8  D006               	goto	l2307
  2479  0013CA                     l2305:
  2480  0013CA  2A0A               	incf	___xxtofl@exp,f,c
  2481  0013CC  90D8               	bcf	status,0,c
  2482  0013CE  320E               	rrcf	___xxtofl@arg+3,f,c
  2483  0013D0  320D               	rrcf	___xxtofl@arg+2,f,c
  2484  0013D2  320C               	rrcf	___xxtofl@arg+1,f,c
  2485  0013D4  320B               	rrcf	___xxtofl@arg,f,c
  2486  0013D6                     l2307:
  2487  0013D6  0E00               	movlw	0
  2488  0013D8  140B               	andwf	___xxtofl@arg,w,c
  2489  0013DA  6E05               	movwf	??___xxtofl& (0+255),c
  2490  0013DC  0E00               	movlw	0
  2491  0013DE  140C               	andwf	___xxtofl@arg+1,w,c
  2492  0013E0  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2493  0013E2  0E00               	movlw	0
  2494  0013E4  140D               	andwf	___xxtofl@arg+2,w,c
  2495  0013E6  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2496  0013E8  0EFE               	movlw	254
  2497  0013EA  140E               	andwf	___xxtofl@arg+3,w,c
  2498  0013EC  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2499  0013EE  5005               	movf	??___xxtofl,w,c
  2500  0013F0  1006               	iorwf	??___xxtofl+1,w,c
  2501  0013F2  1007               	iorwf	??___xxtofl+2,w,c
  2502  0013F4  1008               	iorwf	??___xxtofl+3,w,c
  2503  0013F6  B4D8               	btfsc	status,2,c
  2504  0013F8  D00D               	goto	l840
  2505  0013FA  D7E7               	goto	l2305
  2506  0013FC                     l2309:
  2507  0013FC  2A0A               	incf	___xxtofl@exp,f,c
  2508  0013FE  0E01               	movlw	1
  2509  001400  260B               	addwf	___xxtofl@arg,f,c
  2510  001402  0E00               	movlw	0
  2511  001404  220C               	addwfc	___xxtofl@arg+1,f,c
  2512  001406  220D               	addwfc	___xxtofl@arg+2,f,c
  2513  001408  220E               	addwfc	___xxtofl@arg+3,f,c
  2514  00140A  90D8               	bcf	status,0,c
  2515  00140C  320E               	rrcf	___xxtofl@arg+3,f,c
  2516  00140E  320D               	rrcf	___xxtofl@arg+2,f,c
  2517  001410  320C               	rrcf	___xxtofl@arg+1,f,c
  2518  001412  320B               	rrcf	___xxtofl@arg,f,c
  2519  001414                     l840:
  2520  001414  0E00               	movlw	0
  2521  001416  140B               	andwf	___xxtofl@arg,w,c
  2522  001418  6E05               	movwf	??___xxtofl& (0+255),c
  2523  00141A  0E00               	movlw	0
  2524  00141C  140C               	andwf	___xxtofl@arg+1,w,c
  2525  00141E  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  2526  001420  0E00               	movlw	0
  2527  001422  140D               	andwf	___xxtofl@arg+2,w,c
  2528  001424  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  2529  001426  0EFF               	movlw	255
  2530  001428  140E               	andwf	___xxtofl@arg+3,w,c
  2531  00142A  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  2532  00142C  5005               	movf	??___xxtofl,w,c
  2533  00142E  1006               	iorwf	??___xxtofl+1,w,c
  2534  001430  1007               	iorwf	??___xxtofl+2,w,c
  2535  001432  1008               	iorwf	??___xxtofl+3,w,c
  2536  001434  B4D8               	btfsc	status,2,c
  2537  001436  D007               	goto	l2317
  2538  001438  D7E1               	goto	l2309
  2539  00143A                     l2315:
  2540  00143A  060A               	decf	___xxtofl@exp,f,c
  2541  00143C  90D8               	bcf	status,0,c
  2542  00143E  360B               	rlcf	___xxtofl@arg,f,c
  2543  001440  360C               	rlcf	___xxtofl@arg+1,f,c
  2544  001442  360D               	rlcf	___xxtofl@arg+2,f,c
  2545  001444  360E               	rlcf	___xxtofl@arg+3,f,c
  2546  001446                     l2317:
  2547  001446  BE0D               	btfsc	___xxtofl@arg+2,7,c
  2548  001448  D003               	goto	u2050
  2549  00144A  0E02               	movlw	2
  2550  00144C  600A               	cpfslt	___xxtofl@exp,c
  2551  00144E  D7F5               	goto	l2315
  2552  001450                     u2050:
  2553  001450  A00A               	btfss	___xxtofl@exp,0,c
  2554  001452  9E0D               	bcf	___xxtofl@arg+2,7,c
  2555  001454  90D8               	bcf	status,0,c
  2556  001456  320A               	rrcf	___xxtofl@exp,f,c
  2557  001458  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2558  00145C  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  2559  00145E  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  2560  001460  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  2561  001462  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2562  001466  6A07               	clrf	??___xxtofl+2,c
  2563  001468  6A06               	clrf	??___xxtofl+1,c
  2564  00146A  6A05               	clrf	??___xxtofl,c
  2565  00146C  5005               	movf	??___xxtofl,w,c
  2566  00146E  120B               	iorwf	___xxtofl@arg,f,c
  2567  001470  5006               	movf	??___xxtofl+1,w,c
  2568  001472  120C               	iorwf	___xxtofl@arg+1,f,c
  2569  001474  5007               	movf	??___xxtofl+2,w,c
  2570  001476  120D               	iorwf	___xxtofl@arg+2,f,c
  2571  001478  5008               	movf	??___xxtofl+3,w,c
  2572  00147A  120E               	iorwf	___xxtofl@arg+3,f,c
  2573  00147C  5009               	movf	___xxtofl@sign,w,c
  2574  00147E  A4D8               	btfss	status,2,c
  2575  001480  AE04               	btfss	___xxtofl@val+3,7,c
  2576  001482  D001               	goto	l2333
  2577  001484  8E0E               	bsf	___xxtofl@arg+3,7,c
  2578  001486                     l2333:
  2579  001486  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2580  00148A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2581  00148E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2582  001492  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2583  001496  0012               	return		;funcret
  2584  001498                     __end_of___xxtofl:
  2585                           	opt callstack 0
  2586                           
  2587 ;; *************** function ___wmul *****************
  2588 ;; Defined at:
  2589 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  multiplier      2    0[COMRAM] unsigned int 
  2592 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  product         2    4[COMRAM] unsigned int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    0[COMRAM] unsigned int 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, prodl, prodh
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2604 ;;      Params:         4       0       0       0       0       0       0
  2605 ;;      Locals:         2       0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0
  2607 ;;      Totals:         6       0       0       0       0       0       0
  2608 ;;Total ram usage:        6 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text14
  2618  0018E6                     __ptext14:
  2619                           	opt callstack 0
  2620  0018E6                     ___wmul:
  2621                           	opt callstack 30
  2622                           
  2623                           ;incstack = 0
  2624  0018E6  5001               	movf	___wmul@multiplier,w,c
  2625  0018E8  0203               	mulwf	___wmul@multiplicand,c
  2626  0018EA  CFF3 F005          	movff	prodl,___wmul@product
  2627  0018EE  CFF4 F006          	movff	prodh,___wmul@product+1
  2628  0018F2  5001               	movf	___wmul@multiplier,w,c
  2629  0018F4  0204               	mulwf	___wmul@multiplicand+1,c
  2630  0018F6  50F3               	movf	prodl,w,c
  2631  0018F8  2606               	addwf	___wmul@product+1,f,c
  2632  0018FA  5002               	movf	___wmul@multiplier+1,w,c
  2633  0018FC  0203               	mulwf	___wmul@multiplicand,c
  2634  0018FE  50F3               	movf	prodl,w,c
  2635  001900  2606               	addwf	___wmul@product+1,f,c
  2636  001902  C005  F001         	movff	___wmul@product,?___wmul
  2637  001906  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2638  00190A  0012               	return		;funcret
  2639  00190C                     __end_of___wmul:
  2640                           	opt callstack 0
  2641                           
  2642 ;; *************** function ___fltol *****************
  2643 ;; Defined at:
  2644 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  f1              4   39[COMRAM] unsigned int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  exp1            1   48[COMRAM] unsigned char 
  2649 ;;  sign1           1   47[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  4   39[COMRAM] long 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2659 ;;      Params:         4       0       0       0       0       0       0
  2660 ;;      Locals:         2       0       0       0       0       0       0
  2661 ;;      Temps:          4       0       0       0       0       0       0
  2662 ;;      Totals:        10       0       0       0       0       0       0
  2663 ;;Total ram usage:       10 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text15
  2673  001568                     __ptext15:
  2674                           	opt callstack 0
  2675  001568                     ___fltol:
  2676                           	opt callstack 30
  2677                           
  2678                           ;incstack = 0
  2679  001568  342A               	rlcf	___fltol@f1+2,w,c
  2680  00156A  342B               	rlcf	___fltol@f1+3,w,c
  2681  00156C  6E31               	movwf	___fltol@exp1,c
  2682  00156E  5031               	movf	___fltol@exp1,w,c
  2683  001570  A4D8               	btfss	status,2,c
  2684  001572  D009               	goto	l2253
  2685  001574                     u1920:
  2686  001574  0E00               	movlw	0
  2687  001576  6E28               	movwf	?___fltol,c
  2688  001578  0E00               	movlw	0
  2689  00157A  6E29               	movwf	?___fltol+1,c
  2690  00157C  0E00               	movlw	0
  2691  00157E  6E2A               	movwf	?___fltol+2,c
  2692  001580  0E00               	movlw	0
  2693  001582  6E2B               	movwf	?___fltol+3,c
  2694  001584  0012               	return	
  2695  001586                     l2253:
  2696  001586  C028  F02C         	movff	___fltol@f1,??___fltol
  2697  00158A  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  2698  00158E  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  2699  001592  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  2700  001596  0E20               	movlw	32
  2701  001598  D005               	goto	u1930
  2702  00159A                     u1935:
  2703  00159A  90D8               	bcf	status,0,c
  2704  00159C  322F               	rrcf	??___fltol+3,f,c
  2705  00159E  322E               	rrcf	??___fltol+2,f,c
  2706  0015A0  322D               	rrcf	??___fltol+1,f,c
  2707  0015A2  322C               	rrcf	??___fltol,f,c
  2708  0015A4                     u1930:
  2709  0015A4  2EE8               	decfsz	wreg,f,c
  2710  0015A6  D7F9               	goto	u1935
  2711  0015A8  502C               	movf	??___fltol,w,c
  2712  0015AA  6E30               	movwf	___fltol@sign1,c
  2713  0015AC  8E2A               	bsf	___fltol@f1+2,7,c
  2714  0015AE  0EFF               	movlw	255
  2715  0015B0  1628               	andwf	___fltol@f1,f,c
  2716  0015B2  0EFF               	movlw	255
  2717  0015B4  1629               	andwf	___fltol@f1+1,f,c
  2718  0015B6  0EFF               	movlw	255
  2719  0015B8  162A               	andwf	___fltol@f1+2,f,c
  2720  0015BA  0E00               	movlw	0
  2721  0015BC  162B               	andwf	___fltol@f1+3,f,c
  2722  0015BE  0E96               	movlw	150
  2723  0015C0  5E31               	subwf	___fltol@exp1,f,c
  2724  0015C2  AE31               	btfss	___fltol@exp1,7,c
  2725  0015C4  D00D               	goto	l2273
  2726  0015C6  5031               	movf	___fltol@exp1,w,c
  2727  0015C8  0A80               	xorlw	128
  2728  0015CA  0F97               	addlw	151
  2729  0015CC  A0D8               	btfss	status,0,c
  2730  0015CE  D7D2               	goto	u1920
  2731  0015D0                     l2269:
  2732  0015D0  90D8               	bcf	status,0,c
  2733  0015D2  322B               	rrcf	___fltol@f1+3,f,c
  2734  0015D4  322A               	rrcf	___fltol@f1+2,f,c
  2735  0015D6  3229               	rrcf	___fltol@f1+1,f,c
  2736  0015D8  3228               	rrcf	___fltol@f1,f,c
  2737  0015DA  3E31               	incfsz	___fltol@exp1,f,c
  2738  0015DC  D7F9               	goto	l2269
  2739  0015DE  D00D               	goto	u1970
  2740  0015E0                     l2273:
  2741  0015E0  0E1F               	movlw	31
  2742  0015E2  6431               	cpfsgt	___fltol@exp1,c
  2743  0015E4  D007               	goto	l2281
  2744  0015E6  D7C6               	goto	u1920
  2745  0015E8                     l2279:
  2746  0015E8  90D8               	bcf	status,0,c
  2747  0015EA  3628               	rlcf	___fltol@f1,f,c
  2748  0015EC  3629               	rlcf	___fltol@f1+1,f,c
  2749  0015EE  362A               	rlcf	___fltol@f1+2,f,c
  2750  0015F0  362B               	rlcf	___fltol@f1+3,f,c
  2751  0015F2  0631               	decf	___fltol@exp1,f,c
  2752  0015F4                     l2281:
  2753  0015F4  5031               	movf	___fltol@exp1,w,c
  2754  0015F6  A4D8               	btfss	status,2,c
  2755  0015F8  D7F7               	goto	l2279
  2756  0015FA                     u1970:
  2757  0015FA  5030               	movf	___fltol@sign1,w,c
  2758  0015FC  B4D8               	btfsc	status,2,c
  2759  0015FE  D008               	goto	l2287
  2760  001600  1E2B               	comf	___fltol@f1+3,f,c
  2761  001602  1E2A               	comf	___fltol@f1+2,f,c
  2762  001604  1E29               	comf	___fltol@f1+1,f,c
  2763  001606  6C28               	negf	___fltol@f1,c
  2764  001608  0E00               	movlw	0
  2765  00160A  2229               	addwfc	___fltol@f1+1,f,c
  2766  00160C  222A               	addwfc	___fltol@f1+2,f,c
  2767  00160E  222B               	addwfc	___fltol@f1+3,f,c
  2768  001610                     l2287:
  2769  001610  C028  F028         	movff	___fltol@f1,?___fltol
  2770  001614  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  2771  001618  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  2772  00161C  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  2773  001620  0012               	return		;funcret
  2774  001622                     __end_of___fltol:
  2775                           	opt callstack 0
  2776                           
  2777 ;; *************** function ___flsub *****************
  2778 ;; Defined at:
  2779 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  b               4   16[COMRAM] long 
  2782 ;;  a               4   20[COMRAM] long 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  4   16[COMRAM] long 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2794 ;;      Params:         8       0       0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0
  2797 ;;      Totals:         8       0       0       0       0       0       0
  2798 ;;Total ram usage:        8 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    1
  2801 ;; This function calls:
  2802 ;;		___fladd
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text16
  2809  0017EC                     __ptext16:
  2810                           	opt callstack 0
  2811  0017EC                     ___flsub:
  2812                           	opt callstack 29
  2813                           
  2814                           ;incstack = 0
  2815  0017EC  0E00               	movlw	0
  2816  0017EE  1A15               	xorwf	___flsub@a,f,c
  2817  0017F0  0E00               	movlw	0
  2818  0017F2  1A16               	xorwf	___flsub@a+1,f,c
  2819  0017F4  0E00               	movlw	0
  2820  0017F6  1A17               	xorwf	___flsub@a+2,f,c
  2821  0017F8  0E80               	movlw	128
  2822  0017FA  1A18               	xorwf	___flsub@a+3,f,c
  2823  0017FC  C011  F001         	movff	___flsub@b,___fladd@b
  2824  001800  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2825  001804  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2826  001808  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2827  00180C  C015  F005         	movff	___flsub@a,___fladd@a
  2828  001810  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2829  001814  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2830  001818  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2831  00181C  EC6C  F007         	call	___fladd	;wreg free
  2832  001820  C001  F011         	movff	?___fladd,?___flsub
  2833  001824  C002  F012         	movff	?___fladd+1,?___flsub+1
  2834  001828  C003  F013         	movff	?___fladd+2,?___flsub+2
  2835  00182C  C004  F014         	movff	?___fladd+3,?___flsub+3
  2836  001830  0012               	return		;funcret
  2837  001832                     __end_of___flsub:
  2838                           	opt callstack 0
  2839                           
  2840 ;; *************** function ___fladd *****************
  2841 ;; Defined at:
  2842 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  b               4    0[COMRAM] long 
  2845 ;;  a               4    4[COMRAM] long 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  grs             1   15[COMRAM] unsigned char 
  2848 ;;  bexp            1   14[COMRAM] unsigned char 
  2849 ;;  aexp            1   13[COMRAM] unsigned char 
  2850 ;;  signs           1   12[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  4    0[COMRAM] unsigned char 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2860 ;;      Params:         8       0       0       0       0       0       0
  2861 ;;      Locals:         4       0       0       0       0       0       0
  2862 ;;      Temps:          4       0       0       0       0       0       0
  2863 ;;      Totals:        16       0       0       0       0       0       0
  2864 ;;Total ram usage:       16 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		___flsub
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text17
  2874  000ED8                     __ptext17:
  2875                           	opt callstack 0
  2876  000ED8                     ___fladd:
  2877                           	opt callstack 29
  2878                           
  2879                           ;incstack = 0
  2880  000ED8  5004               	movf	___fladd@b+3,w,c
  2881  000EDA  0B80               	andlw	128
  2882  000EDC  6E0D               	movwf	___fladd@signs,c
  2883  000EDE  5004               	movf	___fladd@b+3,w,c
  2884  000EE0  2404               	addwf	___fladd@b+3,w,c
  2885  000EE2  6E0F               	movwf	___fladd@bexp,c
  2886  000EE4  BE03               	btfsc	___fladd@b+2,7,c
  2887  000EE6  800F               	bsf	___fladd@bexp,0,c
  2888  000EE8  500F               	movf	___fladd@bexp,w,c
  2889  000EEA  B4D8               	btfsc	status,2,c
  2890  000EEC  D00D               	goto	l1821
  2891  000EEE  280F               	incf	___fladd@bexp,w,c
  2892  000EF0  A4D8               	btfss	status,2,c
  2893  000EF2  D008               	goto	l1817
  2894  000EF4  0E00               	movlw	0
  2895  000EF6  6E01               	movwf	___fladd@b,c
  2896  000EF8  0E00               	movlw	0
  2897  000EFA  6E02               	movwf	___fladd@b+1,c
  2898  000EFC  0E00               	movlw	0
  2899  000EFE  6E03               	movwf	___fladd@b+2,c
  2900  000F00  0E00               	movlw	0
  2901  000F02  6E04               	movwf	___fladd@b+3,c
  2902  000F04                     l1817:
  2903  000F04  8E03               	bsf	___fladd@b+2,7,c
  2904  000F06  D006               	goto	L1
  2905  000F08                     l1821:
  2906  000F08  0E00               	movlw	0
  2907  000F0A  6E01               	movwf	___fladd@b,c
  2908  000F0C  0E00               	movlw	0
  2909  000F0E  6E02               	movwf	___fladd@b+1,c
  2910  000F10  0E00               	movlw	0
  2911  000F12  6E03               	movwf	___fladd@b+2,c
  2912  000F14                     L1:
  2913  000F14  0E00               	movlw	0
  2914  000F16  6E04               	movwf	___fladd@b+3,c
  2915  000F18  5008               	movf	___fladd@a+3,w,c
  2916  000F1A  0B80               	andlw	128
  2917  000F1C  6E0E               	movwf	___fladd@aexp,c
  2918  000F1E  500D               	movf	___fladd@signs,w,c
  2919  000F20  180E               	xorwf	___fladd@aexp,w,c
  2920  000F22  A4D8               	btfss	status,2,c
  2921  000F24  8C0D               	bsf	___fladd@signs,6,c
  2922  000F26  5008               	movf	___fladd@a+3,w,c
  2923  000F28  2408               	addwf	___fladd@a+3,w,c
  2924  000F2A  6E0E               	movwf	___fladd@aexp,c
  2925  000F2C  BE07               	btfsc	___fladd@a+2,7,c
  2926  000F2E  800E               	bsf	___fladd@aexp,0,c
  2927  000F30  500E               	movf	___fladd@aexp,w,c
  2928  000F32  B4D8               	btfsc	status,2,c
  2929  000F34  D00D               	goto	l1845
  2930  000F36  280E               	incf	___fladd@aexp,w,c
  2931  000F38  A4D8               	btfss	status,2,c
  2932  000F3A  D008               	goto	l1841
  2933  000F3C  0E00               	movlw	0
  2934  000F3E  6E05               	movwf	___fladd@a,c
  2935  000F40  0E00               	movlw	0
  2936  000F42  6E06               	movwf	___fladd@a+1,c
  2937  000F44  0E00               	movlw	0
  2938  000F46  6E07               	movwf	___fladd@a+2,c
  2939  000F48  0E00               	movlw	0
  2940  000F4A  6E08               	movwf	___fladd@a+3,c
  2941  000F4C                     l1841:
  2942  000F4C  8E07               	bsf	___fladd@a+2,7,c
  2943  000F4E  D006               	goto	L2
  2944  000F50                     l1845:
  2945  000F50  0E00               	movlw	0
  2946  000F52  6E05               	movwf	___fladd@a,c
  2947  000F54  0E00               	movlw	0
  2948  000F56  6E06               	movwf	___fladd@a+1,c
  2949  000F58  0E00               	movlw	0
  2950  000F5A  6E07               	movwf	___fladd@a+2,c
  2951  000F5C                     L2:
  2952  000F5C  0E00               	movlw	0
  2953  000F5E  6E08               	movwf	___fladd@a+3,c
  2954  000F60  500F               	movf	___fladd@bexp,w,c
  2955  000F62  5C0E               	subwf	___fladd@aexp,w,c
  2956  000F64  B0D8               	btfsc	status,0,c
  2957  000F66  D022               	goto	l1883
  2958  000F68  AC0D               	btfss	___fladd@signs,6,c
  2959  000F6A  D002               	goto	l1853
  2960  000F6C  0E80               	movlw	128
  2961  000F6E  1A0D               	xorwf	___fladd@signs,f,c
  2962  000F70                     l1853:
  2963  000F70  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2964  000F74  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2965  000F78  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2966  000F7C  C001  F010         	movff	___fladd@b,___fladd@grs
  2967  000F80  C005  F001         	movff	___fladd@a,___fladd@b
  2968  000F84  C010  F005         	movff	___fladd@grs,___fladd@a
  2969  000F88  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2970  000F8C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2971  000F90  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2972  000F94  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2973  000F98  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2974  000F9C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2975  000FA0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2976  000FA4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2977  000FA8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2978  000FAC                     l1883:
  2979  000FAC  0E00               	movlw	0
  2980  000FAE  6E10               	movwf	___fladd@grs,c
  2981  000FB0  500F               	movf	___fladd@bexp,w,c
  2982  000FB2  C00E  F009         	movff	___fladd@aexp,??___fladd
  2983  000FB6  6A0A               	clrf	(??___fladd+1)& (0+255),c
  2984  000FB8  5E09               	subwf	??___fladd,f,c
  2985  000FBA  0E00               	movlw	0
  2986  000FBC  5A0A               	subwfb	??___fladd+1,f,c
  2987  000FBE  BE0A               	btfsc	??___fladd+1,7,c
  2988  000FC0  D02C               	goto	l707
  2989  000FC2  500A               	movf	??___fladd+1,w,c
  2990  000FC4  E104               	bnz	u1280
  2991  000FC6  0E1A               	movlw	26
  2992  000FC8  5C09               	subwf	??___fladd,w,c
  2993  000FCA  A0D8               	btfss	status,0,c
  2994  000FCC  D026               	goto	l707
  2995  000FCE                     u1280:
  2996  000FCE  5001               	movf	___fladd@b,w,c
  2997  000FD0  1002               	iorwf	___fladd@b+1,w,c
  2998  000FD2  1003               	iorwf	___fladd@b+2,w,c
  2999  000FD4  1004               	iorwf	___fladd@b+3,w,c
  3000  000FD6  B4D8               	btfsc	status,2,c
  3001  000FD8  D002               	goto	u1290
  3002  000FDA  0E01               	movlw	1
  3003  000FDC  D001               	goto	u1300
  3004  000FDE                     u1290:
  3005  000FDE  0E00               	movlw	0
  3006  000FE0                     u1300:
  3007  000FE0  6E10               	movwf	___fladd@grs,c
  3008  000FE2  0E00               	movlw	0
  3009  000FE4  6E01               	movwf	___fladd@b,c
  3010  000FE6  0E00               	movlw	0
  3011  000FE8  6E02               	movwf	___fladd@b+1,c
  3012  000FEA  0E00               	movlw	0
  3013  000FEC  6E03               	movwf	___fladd@b+2,c
  3014  000FEE  0E00               	movlw	0
  3015  000FF0  6E04               	movwf	___fladd@b+3,c
  3016  000FF2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3017  000FF6  D015               	goto	u1330
  3018  000FF8                     l708:
  3019  000FF8  A010               	btfss	___fladd@grs,0,c
  3020  000FFA  D005               	goto	l1895
  3021  000FFC  90D8               	bcf	status,0,c
  3022  000FFE  3010               	rrcf	___fladd@grs,w,c
  3023  001000  0901               	iorlw	1
  3024  001002  6E10               	movwf	___fladd@grs,c
  3025  001004  D002               	goto	l1897
  3026  001006                     l1895:
  3027  001006  90D8               	bcf	status,0,c
  3028  001008  3210               	rrcf	___fladd@grs,f,c
  3029  00100A                     l1897:
  3030  00100A  B001               	btfsc	___fladd@b,0,c
  3031  00100C  8E10               	bsf	___fladd@grs,7,c
  3032  00100E  3404               	rlcf	___fladd@b+3,w,c
  3033  001010  3204               	rrcf	___fladd@b+3,f,c
  3034  001012  3203               	rrcf	___fladd@b+2,f,c
  3035  001014  3202               	rrcf	___fladd@b+1,f,c
  3036  001016  3201               	rrcf	___fladd@b,f,c
  3037  001018  2A0F               	incf	___fladd@bexp,f,c
  3038  00101A                     l707:
  3039  00101A  500E               	movf	___fladd@aexp,w,c
  3040  00101C  5C0F               	subwf	___fladd@bexp,w,c
  3041  00101E  A0D8               	btfss	status,0,c
  3042  001020  D7EB               	goto	l708
  3043  001022                     u1330:
  3044  001022  BC0D               	btfsc	___fladd@signs,6,c
  3045  001024  D028               	goto	l1929
  3046  001026  500F               	movf	___fladd@bexp,w,c
  3047  001028  A4D8               	btfss	status,2,c
  3048  00102A  D009               	goto	l1911
  3049  00102C  0E00               	movlw	0
  3050  00102E  6E01               	movwf	?___fladd,c
  3051  001030  0E00               	movlw	0
  3052  001032  6E02               	movwf	?___fladd+1,c
  3053  001034  0E00               	movlw	0
  3054  001036  6E03               	movwf	?___fladd+2,c
  3055  001038  0E00               	movlw	0
  3056  00103A  6E04               	movwf	?___fladd+3,c
  3057  00103C  0012               	return	
  3058  00103E                     l1911:
  3059  00103E  5005               	movf	___fladd@a,w,c
  3060  001040  2601               	addwf	___fladd@b,f,c
  3061  001042  5006               	movf	___fladd@a+1,w,c
  3062  001044  2202               	addwfc	___fladd@b+1,f,c
  3063  001046  5007               	movf	___fladd@a+2,w,c
  3064  001048  2203               	addwfc	___fladd@b+2,f,c
  3065  00104A  5008               	movf	___fladd@a+3,w,c
  3066  00104C  2204               	addwfc	___fladd@b+3,f,c
  3067  00104E  A004               	btfss	___fladd@b+3,0,c
  3068  001050  D071               	goto	u1460
  3069  001052  A010               	btfss	___fladd@grs,0,c
  3070  001054  D005               	goto	l1919
  3071  001056  90D8               	bcf	status,0,c
  3072  001058  3010               	rrcf	___fladd@grs,w,c
  3073  00105A  0901               	iorlw	1
  3074  00105C  6E10               	movwf	___fladd@grs,c
  3075  00105E  D002               	goto	l1921
  3076  001060                     l1919:
  3077  001060  90D8               	bcf	status,0,c
  3078  001062  3210               	rrcf	___fladd@grs,f,c
  3079  001064                     l1921:
  3080  001064  B001               	btfsc	___fladd@b,0,c
  3081  001066  8E10               	bsf	___fladd@grs,7,c
  3082  001068  3404               	rlcf	___fladd@b+3,w,c
  3083  00106A  3204               	rrcf	___fladd@b+3,f,c
  3084  00106C  3203               	rrcf	___fladd@b+2,f,c
  3085  00106E  3202               	rrcf	___fladd@b+1,f,c
  3086  001070  3201               	rrcf	___fladd@b,f,c
  3087  001072  2A0F               	incf	___fladd@bexp,f,c
  3088  001074  D05F               	goto	u1460
  3089  001076                     l1929:
  3090  001076  5005               	movf	___fladd@a,w,c
  3091  001078  5C01               	subwf	___fladd@b,w,c
  3092  00107A  5006               	movf	___fladd@a+1,w,c
  3093  00107C  5802               	subwfb	___fladd@b+1,w,c
  3094  00107E  5007               	movf	___fladd@a+2,w,c
  3095  001080  5803               	subwfb	___fladd@b+2,w,c
  3096  001082  5004               	movf	___fladd@b+3,w,c
  3097  001084  0A80               	xorlw	128
  3098  001086  6E09               	movwf	??___fladd& (0+255),c
  3099  001088  5008               	movf	___fladd@a+3,w,c
  3100  00108A  0A80               	xorlw	128
  3101  00108C  5809               	subwfb	??___fladd& (0+255),w,c
  3102  00108E  B0D8               	btfsc	status,0,c
  3103  001090  D025               	goto	l1939
  3104  001092  5001               	movf	___fladd@b,w,c
  3105  001094  5C05               	subwf	___fladd@a,w,c
  3106  001096  6E09               	movwf	??___fladd& (0+255),c
  3107  001098  5002               	movf	___fladd@b+1,w,c
  3108  00109A  5806               	subwfb	___fladd@a+1,w,c
  3109  00109C  6E0A               	movwf	(??___fladd+1)& (0+255),c
  3110  00109E  5003               	movf	___fladd@b+2,w,c
  3111  0010A0  5807               	subwfb	___fladd@a+2,w,c
  3112  0010A2  6E0B               	movwf	(??___fladd+2)& (0+255),c
  3113  0010A4  5004               	movf	___fladd@b+3,w,c
  3114  0010A6  5808               	subwfb	___fladd@a+3,w,c
  3115  0010A8  6E0C               	movwf	(??___fladd+3)& (0+255),c
  3116  0010AA  0EFF               	movlw	255
  3117  0010AC  2409               	addwf	??___fladd,w,c
  3118  0010AE  6E01               	movwf	___fladd@b,c
  3119  0010B0  0EFF               	movlw	255
  3120  0010B2  200A               	addwfc	??___fladd+1,w,c
  3121  0010B4  6E02               	movwf	___fladd@b+1,c
  3122  0010B6  0EFF               	movlw	255
  3123  0010B8  200B               	addwfc	??___fladd+2,w,c
  3124  0010BA  6E03               	movwf	___fladd@b+2,c
  3125  0010BC  0EFF               	movlw	255
  3126  0010BE  200C               	addwfc	??___fladd+3,w,c
  3127  0010C0  6E04               	movwf	___fladd@b+3,c
  3128  0010C2  0E80               	movlw	128
  3129  0010C4  1A0D               	xorwf	___fladd@signs,f,c
  3130  0010C6  6C10               	negf	___fladd@grs,c
  3131  0010C8  5010               	movf	___fladd@grs,w,c
  3132  0010CA  A4D8               	btfss	status,2,c
  3133  0010CC  D00F               	goto	l723
  3134  0010CE  0E01               	movlw	1
  3135  0010D0  2601               	addwf	___fladd@b,f,c
  3136  0010D2  0E00               	movlw	0
  3137  0010D4  2202               	addwfc	___fladd@b+1,f,c
  3138  0010D6  2203               	addwfc	___fladd@b+2,f,c
  3139  0010D8  2204               	addwfc	___fladd@b+3,f,c
  3140  0010DA  D008               	goto	l723
  3141  0010DC                     l1939:
  3142  0010DC  5005               	movf	___fladd@a,w,c
  3143  0010DE  5E01               	subwf	___fladd@b,f,c
  3144  0010E0  5006               	movf	___fladd@a+1,w,c
  3145  0010E2  5A02               	subwfb	___fladd@b+1,f,c
  3146  0010E4  5007               	movf	___fladd@a+2,w,c
  3147  0010E6  5A03               	subwfb	___fladd@b+2,f,c
  3148  0010E8  5008               	movf	___fladd@a+3,w,c
  3149  0010EA  5A04               	subwfb	___fladd@b+3,f,c
  3150  0010EC                     l723:
  3151  0010EC  5001               	movf	___fladd@b,w,c
  3152  0010EE  1002               	iorwf	___fladd@b+1,w,c
  3153  0010F0  1003               	iorwf	___fladd@b+2,w,c
  3154  0010F2  1004               	iorwf	___fladd@b+3,w,c
  3155  0010F4  A4D8               	btfss	status,2,c
  3156  0010F6  D01C               	goto	l1963
  3157  0010F8  5010               	movf	___fladd@grs,w,c
  3158  0010FA  A4D8               	btfss	status,2,c
  3159  0010FC  D019               	goto	l1963
  3160  0010FE  0E00               	movlw	0
  3161  001100  6E01               	movwf	?___fladd,c
  3162  001102  0E00               	movlw	0
  3163  001104  6E02               	movwf	?___fladd+1,c
  3164  001106  0E00               	movlw	0
  3165  001108  6E03               	movwf	?___fladd+2,c
  3166  00110A  0E00               	movlw	0
  3167  00110C  6E04               	movwf	?___fladd+3,c
  3168  00110E  0012               	return	
  3169  001110                     l1947:
  3170  001110  90D8               	bcf	status,0,c
  3171  001112  3601               	rlcf	___fladd@b,f,c
  3172  001114  3602               	rlcf	___fladd@b+1,f,c
  3173  001116  3603               	rlcf	___fladd@b+2,f,c
  3174  001118  3604               	rlcf	___fladd@b+3,f,c
  3175  00111A  BE10               	btfsc	___fladd@grs,7,c
  3176  00111C  8001               	bsf	___fladd@b,0,c
  3177  00111E  A010               	btfss	___fladd@grs,0,c
  3178  001120  D002               	goto	l1957
  3179  001122  80D8               	bsf	status,0,c
  3180  001124  D001               	goto	L3
  3181  001126                     l1957:
  3182  001126  90D8               	bcf	status,0,c
  3183  001128                     L3:
  3184  001128  3610               	rlcf	___fladd@grs,f,c
  3185  00112A  500F               	movf	___fladd@bexp,w,c
  3186  00112C  A4D8               	btfss	status,2,c
  3187  00112E  060F               	decf	___fladd@bexp,f,c
  3188  001130                     l1963:
  3189  001130  AE03               	btfss	___fladd@b+2,7,c
  3190  001132  D7EE               	goto	l1947
  3191  001134                     u1460:
  3192  001134  0E00               	movlw	0
  3193  001136  6E0E               	movwf	___fladd@aexp,c
  3194  001138  AE10               	btfss	___fladd@grs,7,c
  3195  00113A  D00B               	goto	l732
  3196  00113C  C010  F009         	movff	___fladd@grs,??___fladd
  3197  001140  0E7F               	movlw	127
  3198  001142  1609               	andwf	??___fladd,f,c
  3199  001144  B4D8               	btfsc	status,2,c
  3200  001146  D003               	goto	l733
  3201  001148                     u1480:
  3202  001148  0E01               	movlw	1
  3203  00114A  6E0E               	movwf	___fladd@aexp,c
  3204  00114C  D002               	goto	l732
  3205  00114E                     l733:
  3206  00114E  B001               	btfsc	___fladd@b,0,c
  3207  001150  D7FB               	goto	u1480
  3208  001152                     l732:
  3209  001152  500E               	movf	___fladd@aexp,w,c
  3210  001154  B4D8               	btfsc	status,2,c
  3211  001156  D020               	goto	l1983
  3212  001158  0E01               	movlw	1
  3213  00115A  2601               	addwf	___fladd@b,f,c
  3214  00115C  0E00               	movlw	0
  3215  00115E  2202               	addwfc	___fladd@b+1,f,c
  3216  001160  2203               	addwfc	___fladd@b+2,f,c
  3217  001162  2204               	addwfc	___fladd@b+3,f,c
  3218  001164  A004               	btfss	___fladd@b+3,0,c
  3219  001166  D018               	goto	l1983
  3220  001168  C001  F009         	movff	___fladd@b,??___fladd
  3221  00116C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3222  001170  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3223  001174  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3224  001178  340C               	rlcf	??___fladd+3,w,c
  3225  00117A  320C               	rrcf	??___fladd+3,f,c
  3226  00117C  320B               	rrcf	??___fladd+2,f,c
  3227  00117E  320A               	rrcf	??___fladd+1,f,c
  3228  001180  3209               	rrcf	??___fladd,f,c
  3229  001182  C009  F001         	movff	??___fladd,___fladd@b
  3230  001186  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3231  00118A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3232  00118E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3233  001192  280F               	incf	___fladd@bexp,w,c
  3234  001194  A4D8               	btfss	status,2,c
  3235  001196  2A0F               	incf	___fladd@bexp,f,c
  3236  001198                     l1983:
  3237  001198  280F               	incf	___fladd@bexp,w,c
  3238  00119A  B4D8               	btfsc	status,2,c
  3239  00119C  D003               	goto	u1540
  3240  00119E  500F               	movf	___fladd@bexp,w,c
  3241  0011A0  A4D8               	btfss	status,2,c
  3242  0011A2  D00D               	goto	l1991
  3243  0011A4                     u1540:
  3244  0011A4  0E00               	movlw	0
  3245  0011A6  6E01               	movwf	___fladd@b,c
  3246  0011A8  0E00               	movlw	0
  3247  0011AA  6E02               	movwf	___fladd@b+1,c
  3248  0011AC  0E00               	movlw	0
  3249  0011AE  6E03               	movwf	___fladd@b+2,c
  3250  0011B0  0E00               	movlw	0
  3251  0011B2  6E04               	movwf	___fladd@b+3,c
  3252  0011B4  500F               	movf	___fladd@bexp,w,c
  3253  0011B6  A4D8               	btfss	status,2,c
  3254  0011B8  D002               	goto	l1991
  3255  0011BA  0E00               	movlw	0
  3256  0011BC  6E0D               	movwf	___fladd@signs,c
  3257  0011BE                     l1991:
  3258  0011BE  A00F               	btfss	___fladd@bexp,0,c
  3259  0011C0  D002               	goto	l1995
  3260  0011C2  8E03               	bsf	___fladd@b+2,7,c
  3261  0011C4  D001               	goto	l1997
  3262  0011C6                     l1995:
  3263  0011C6  9E03               	bcf	___fladd@b+2,7,c
  3264  0011C8                     l1997:
  3265  0011C8  90D8               	bcf	status,0,c
  3266  0011CA  300F               	rrcf	___fladd@bexp,w,c
  3267  0011CC  6E04               	movwf	___fladd@b+3,c
  3268  0011CE  BE0D               	btfsc	___fladd@signs,7,c
  3269  0011D0  8E04               	bsf	___fladd@b+3,7,c
  3270  0011D2  C001  F001         	movff	___fladd@b,?___fladd
  3271  0011D6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3272  0011DA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3273  0011DE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3274  0011E2  0012               	return		;funcret
  3275  0011E4                     __end_of___fladd:
  3276                           	opt callstack 0
  3277                           
  3278 ;; *************** function ___flmul *****************
  3279 ;; Defined at:
  3280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  b               4   14[COMRAM] unsigned char 
  3283 ;;  a               4   18[COMRAM] unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  prod            4   33[COMRAM] struct .
  3286 ;;  grs             4   27[COMRAM] unsigned long 
  3287 ;;  temp            2   37[COMRAM] struct .
  3288 ;;  bexp            1   32[COMRAM] unsigned char 
  3289 ;;  aexp            1   31[COMRAM] unsigned char 
  3290 ;;  sign            1   26[COMRAM] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  4   14[COMRAM] unsigned char 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, prodl, prodh
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3300 ;;      Params:         8       0       0       0       0       0       0
  3301 ;;      Locals:        13       0       0       0       0       0       0
  3302 ;;      Temps:          4       0       0       0       0       0       0
  3303 ;;      Totals:        25       0       0       0       0       0       0
  3304 ;;Total ram usage:       25 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_main
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text18
  3314  000B86                     __ptext18:
  3315                           	opt callstack 0
  3316  000B86                     ___flmul:
  3317                           	opt callstack 30
  3318                           
  3319                           ;incstack = 0
  3320  000B86  5012               	movf	___flmul@b+3,w,c
  3321  000B88  0B80               	andlw	128
  3322  000B8A  6E1B               	movwf	___flmul@sign,c
  3323  000B8C  5012               	movf	___flmul@b+3,w,c
  3324  000B8E  2412               	addwf	___flmul@b+3,w,c
  3325  000B90  6E21               	movwf	___flmul@bexp,c
  3326  000B92  BE11               	btfsc	___flmul@b+2,7,c
  3327  000B94  8021               	bsf	___flmul@bexp,0,c
  3328  000B96  5021               	movf	___flmul@bexp,w,c
  3329  000B98  B4D8               	btfsc	status,2,c
  3330  000B9A  D00D               	goto	l2103
  3331  000B9C  2821               	incf	___flmul@bexp,w,c
  3332  000B9E  A4D8               	btfss	status,2,c
  3333  000BA0  D008               	goto	l2101
  3334  000BA2  0E00               	movlw	0
  3335  000BA4  6E0F               	movwf	___flmul@b,c
  3336  000BA6  0E00               	movlw	0
  3337  000BA8  6E10               	movwf	___flmul@b+1,c
  3338  000BAA  0E00               	movlw	0
  3339  000BAC  6E11               	movwf	___flmul@b+2,c
  3340  000BAE  0E00               	movlw	0
  3341  000BB0  6E12               	movwf	___flmul@b+3,c
  3342  000BB2                     l2101:
  3343  000BB2  8E11               	bsf	___flmul@b+2,7,c
  3344  000BB4  D008               	goto	l2105
  3345  000BB6                     l2103:
  3346  000BB6  0E00               	movlw	0
  3347  000BB8  6E0F               	movwf	___flmul@b,c
  3348  000BBA  0E00               	movlw	0
  3349  000BBC  6E10               	movwf	___flmul@b+1,c
  3350  000BBE  0E00               	movlw	0
  3351  000BC0  6E11               	movwf	___flmul@b+2,c
  3352  000BC2  0E00               	movlw	0
  3353  000BC4  6E12               	movwf	___flmul@b+3,c
  3354  000BC6                     l2105:
  3355  000BC6  5016               	movf	___flmul@a+3,w,c
  3356  000BC8  0B80               	andlw	128
  3357  000BCA  1A1B               	xorwf	___flmul@sign,f,c
  3358  000BCC  5016               	movf	___flmul@a+3,w,c
  3359  000BCE  2416               	addwf	___flmul@a+3,w,c
  3360  000BD0  6E20               	movwf	___flmul@aexp,c
  3361  000BD2  BE15               	btfsc	___flmul@a+2,7,c
  3362  000BD4  8020               	bsf	___flmul@aexp,0,c
  3363  000BD6  5020               	movf	___flmul@aexp,w,c
  3364  000BD8  B4D8               	btfsc	status,2,c
  3365  000BDA  D00D               	goto	l2121
  3366  000BDC  2820               	incf	___flmul@aexp,w,c
  3367  000BDE  A4D8               	btfss	status,2,c
  3368  000BE0  D008               	goto	l2119
  3369  000BE2  0E00               	movlw	0
  3370  000BE4  6E13               	movwf	___flmul@a,c
  3371  000BE6  0E00               	movlw	0
  3372  000BE8  6E14               	movwf	___flmul@a+1,c
  3373  000BEA  0E00               	movlw	0
  3374  000BEC  6E15               	movwf	___flmul@a+2,c
  3375  000BEE  0E00               	movlw	0
  3376  000BF0  6E16               	movwf	___flmul@a+3,c
  3377  000BF2                     l2119:
  3378  000BF2  8E15               	bsf	___flmul@a+2,7,c
  3379  000BF4  D008               	goto	l792
  3380  000BF6                     l2121:
  3381  000BF6  0E00               	movlw	0
  3382  000BF8  6E13               	movwf	___flmul@a,c
  3383  000BFA  0E00               	movlw	0
  3384  000BFC  6E14               	movwf	___flmul@a+1,c
  3385  000BFE  0E00               	movlw	0
  3386  000C00  6E15               	movwf	___flmul@a+2,c
  3387  000C02  0E00               	movlw	0
  3388  000C04  6E16               	movwf	___flmul@a+3,c
  3389  000C06                     l792:
  3390  000C06  5020               	movf	___flmul@aexp,w,c
  3391  000C08  B4D8               	btfsc	status,2,c
  3392  000C0A  D003               	goto	u1750
  3393  000C0C  5021               	movf	___flmul@bexp,w,c
  3394  000C0E  A4D8               	btfss	status,2,c
  3395  000C10  D009               	goto	l2129
  3396  000C12                     u1750:
  3397  000C12  0E00               	movlw	0
  3398  000C14  6E0F               	movwf	?___flmul,c
  3399  000C16  0E00               	movlw	0
  3400  000C18  6E10               	movwf	?___flmul+1,c
  3401  000C1A  0E00               	movlw	0
  3402  000C1C  6E11               	movwf	?___flmul+2,c
  3403  000C1E  0E00               	movlw	0
  3404  000C20  6E12               	movwf	?___flmul+3,c
  3405  000C22  0012               	return	
  3406  000C24                     l2129:
  3407  000C24  5015               	movf	___flmul@a+2,w,c
  3408  000C26  020F               	mulwf	___flmul@b,c
  3409  000C28  CFF3 F026          	movff	prodl,___flmul@temp
  3410  000C2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3411  000C30  5026               	movf	___flmul@temp,w,c
  3412  000C32  6E1C               	movwf	___flmul@grs,c
  3413  000C34  6A1D               	clrf	___flmul@grs+1,c
  3414  000C36  6A1E               	clrf	___flmul@grs+2,c
  3415  000C38  6A1F               	clrf	___flmul@grs+3,c
  3416  000C3A  5027               	movf	___flmul@temp+1,w,c
  3417  000C3C  6E22               	movwf	___flmul@prod,c
  3418  000C3E  6A23               	clrf	___flmul@prod+1,c
  3419  000C40  6A24               	clrf	___flmul@prod+2,c
  3420  000C42  6A25               	clrf	___flmul@prod+3,c
  3421  000C44  5014               	movf	___flmul@a+1,w,c
  3422  000C46  0210               	mulwf	___flmul@b+1,c
  3423  000C48  CFF3 F026          	movff	prodl,___flmul@temp
  3424  000C4C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3425  000C50  5026               	movf	___flmul@temp,w,c
  3426  000C52  261C               	addwf	___flmul@grs,f,c
  3427  000C54  0E00               	movlw	0
  3428  000C56  221D               	addwfc	___flmul@grs+1,f,c
  3429  000C58  221E               	addwfc	___flmul@grs+2,f,c
  3430  000C5A  221F               	addwfc	___flmul@grs+3,f,c
  3431  000C5C  5027               	movf	___flmul@temp+1,w,c
  3432  000C5E  2622               	addwf	___flmul@prod,f,c
  3433  000C60  0E00               	movlw	0
  3434  000C62  2223               	addwfc	___flmul@prod+1,f,c
  3435  000C64  2224               	addwfc	___flmul@prod+2,f,c
  3436  000C66  2225               	addwfc	___flmul@prod+3,f,c
  3437  000C68  5013               	movf	___flmul@a,w,c
  3438  000C6A  0211               	mulwf	___flmul@b+2,c
  3439  000C6C  CFF3 F026          	movff	prodl,___flmul@temp
  3440  000C70  CFF4 F027          	movff	prodh,___flmul@temp+1
  3441  000C74  5026               	movf	___flmul@temp,w,c
  3442  000C76  261C               	addwf	___flmul@grs,f,c
  3443  000C78  0E00               	movlw	0
  3444  000C7A  221D               	addwfc	___flmul@grs+1,f,c
  3445  000C7C  221E               	addwfc	___flmul@grs+2,f,c
  3446  000C7E  221F               	addwfc	___flmul@grs+3,f,c
  3447  000C80  5027               	movf	___flmul@temp+1,w,c
  3448  000C82  2622               	addwf	___flmul@prod,f,c
  3449  000C84  0E00               	movlw	0
  3450  000C86  2223               	addwfc	___flmul@prod+1,f,c
  3451  000C88  2224               	addwfc	___flmul@prod+2,f,c
  3452  000C8A  2225               	addwfc	___flmul@prod+3,f,c
  3453  000C8C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3454  000C90  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3455  000C94  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3456  000C98  6A1C               	clrf	___flmul@grs,c
  3457  000C9A  5013               	movf	___flmul@a,w,c
  3458  000C9C  0210               	mulwf	___flmul@b+1,c
  3459  000C9E  CFF3 F026          	movff	prodl,___flmul@temp
  3460  000CA2  CFF4 F027          	movff	prodh,___flmul@temp+1
  3461  000CA6  5026               	movf	___flmul@temp,w,c
  3462  000CA8  261C               	addwf	___flmul@grs,f,c
  3463  000CAA  5027               	movf	___flmul@temp+1,w,c
  3464  000CAC  221D               	addwfc	___flmul@grs+1,f,c
  3465  000CAE  0E00               	movlw	0
  3466  000CB0  221E               	addwfc	___flmul@grs+2,f,c
  3467  000CB2  0E00               	movlw	0
  3468  000CB4  221F               	addwfc	___flmul@grs+3,f,c
  3469  000CB6  5014               	movf	___flmul@a+1,w,c
  3470  000CB8  020F               	mulwf	___flmul@b,c
  3471  000CBA  CFF3 F026          	movff	prodl,___flmul@temp
  3472  000CBE  CFF4 F027          	movff	prodh,___flmul@temp+1
  3473  000CC2  5026               	movf	___flmul@temp,w,c
  3474  000CC4  261C               	addwf	___flmul@grs,f,c
  3475  000CC6  5027               	movf	___flmul@temp+1,w,c
  3476  000CC8  221D               	addwfc	___flmul@grs+1,f,c
  3477  000CCA  0E00               	movlw	0
  3478  000CCC  221E               	addwfc	___flmul@grs+2,f,c
  3479  000CCE  0E00               	movlw	0
  3480  000CD0  221F               	addwfc	___flmul@grs+3,f,c
  3481  000CD2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3482  000CD6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3483  000CDA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3484  000CDE  6A1C               	clrf	___flmul@grs,c
  3485  000CE0  5013               	movf	___flmul@a,w,c
  3486  000CE2  020F               	mulwf	___flmul@b,c
  3487  000CE4  CFF3 F026          	movff	prodl,___flmul@temp
  3488  000CE8  CFF4 F027          	movff	prodh,___flmul@temp+1
  3489  000CEC  5026               	movf	___flmul@temp,w,c
  3490  000CEE  261C               	addwf	___flmul@grs,f,c
  3491  000CF0  5027               	movf	___flmul@temp+1,w,c
  3492  000CF2  221D               	addwfc	___flmul@grs+1,f,c
  3493  000CF4  0E00               	movlw	0
  3494  000CF6  221E               	addwfc	___flmul@grs+2,f,c
  3495  000CF8  0E00               	movlw	0
  3496  000CFA  221F               	addwfc	___flmul@grs+3,f,c
  3497  000CFC  5015               	movf	___flmul@a+2,w,c
  3498  000CFE  0210               	mulwf	___flmul@b+1,c
  3499  000D00  CFF3 F026          	movff	prodl,___flmul@temp
  3500  000D04  CFF4 F027          	movff	prodh,___flmul@temp+1
  3501  000D08  5026               	movf	___flmul@temp,w,c
  3502  000D0A  2622               	addwf	___flmul@prod,f,c
  3503  000D0C  5027               	movf	___flmul@temp+1,w,c
  3504  000D0E  2223               	addwfc	___flmul@prod+1,f,c
  3505  000D10  0E00               	movlw	0
  3506  000D12  2224               	addwfc	___flmul@prod+2,f,c
  3507  000D14  0E00               	movlw	0
  3508  000D16  2225               	addwfc	___flmul@prod+3,f,c
  3509  000D18  5014               	movf	___flmul@a+1,w,c
  3510  000D1A  0211               	mulwf	___flmul@b+2,c
  3511  000D1C  CFF3 F026          	movff	prodl,___flmul@temp
  3512  000D20  CFF4 F027          	movff	prodh,___flmul@temp+1
  3513  000D24  5026               	movf	___flmul@temp,w,c
  3514  000D26  2622               	addwf	___flmul@prod,f,c
  3515  000D28  5027               	movf	___flmul@temp+1,w,c
  3516  000D2A  2223               	addwfc	___flmul@prod+1,f,c
  3517  000D2C  0E00               	movlw	0
  3518  000D2E  2224               	addwfc	___flmul@prod+2,f,c
  3519  000D30  0E00               	movlw	0
  3520  000D32  2225               	addwfc	___flmul@prod+3,f,c
  3521  000D34  5015               	movf	___flmul@a+2,w,c
  3522  000D36  0211               	mulwf	___flmul@b+2,c
  3523  000D38  CFF3 F026          	movff	prodl,___flmul@temp
  3524  000D3C  CFF4 F027          	movff	prodh,___flmul@temp+1
  3525  000D40  5026               	movf	___flmul@temp,w,c
  3526  000D42  6E17               	movwf	??___flmul& (0+255),c
  3527  000D44  5027               	movf	___flmul@temp+1,w,c
  3528  000D46  6E18               	movwf	(??___flmul+1)& (0+255),c
  3529  000D48  6A19               	clrf	(??___flmul+2)& (0+255),c
  3530  000D4A  6A1A               	clrf	(??___flmul+3)& (0+255),c
  3531  000D4C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  3532  000D50  C018  F019         	movff	??___flmul+1,??___flmul+2
  3533  000D54  C017  F018         	movff	??___flmul,??___flmul+1
  3534  000D58  6A17               	clrf	??___flmul,c
  3535  000D5A  5017               	movf	??___flmul,w,c
  3536  000D5C  2622               	addwf	___flmul@prod,f,c
  3537  000D5E  5018               	movf	??___flmul+1,w,c
  3538  000D60  2223               	addwfc	___flmul@prod+1,f,c
  3539  000D62  5019               	movf	??___flmul+2,w,c
  3540  000D64  2224               	addwfc	___flmul@prod+2,f,c
  3541  000D66  501A               	movf	??___flmul+3,w,c
  3542  000D68  2225               	addwfc	___flmul@prod+3,f,c
  3543  000D6A  C01C  F017         	movff	___flmul@grs,??___flmul
  3544  000D6E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  3545  000D72  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  3546  000D76  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  3547  000D7A  0E19               	movlw	25
  3548  000D7C  D005               	goto	u1760
  3549  000D7E                     u1765:
  3550  000D7E  90D8               	bcf	status,0,c
  3551  000D80  321A               	rrcf	??___flmul+3,f,c
  3552  000D82  3219               	rrcf	??___flmul+2,f,c
  3553  000D84  3218               	rrcf	??___flmul+1,f,c
  3554  000D86  3217               	rrcf	??___flmul,f,c
  3555  000D88                     u1760:
  3556  000D88  2EE8               	decfsz	wreg,f,c
  3557  000D8A  D7F9               	goto	u1765
  3558  000D8C  5017               	movf	??___flmul,w,c
  3559  000D8E  2622               	addwf	___flmul@prod,f,c
  3560  000D90  5018               	movf	??___flmul+1,w,c
  3561  000D92  2223               	addwfc	___flmul@prod+1,f,c
  3562  000D94  5019               	movf	??___flmul+2,w,c
  3563  000D96  2224               	addwfc	___flmul@prod+2,f,c
  3564  000D98  501A               	movf	??___flmul+3,w,c
  3565  000D9A  2225               	addwfc	___flmul@prod+3,f,c
  3566  000D9C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  3567  000DA0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  3568  000DA4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  3569  000DA8  6A1C               	clrf	___flmul@grs,c
  3570  000DAA  5020               	movf	___flmul@aexp,w,c
  3571  000DAC  C021  F017         	movff	___flmul@bexp,??___flmul
  3572  000DB0  6A18               	clrf	(??___flmul+1)& (0+255),c
  3573  000DB2  2617               	addwf	??___flmul,f,c
  3574  000DB4  0E00               	movlw	0
  3575  000DB6  2218               	addwfc	??___flmul+1,f,c
  3576  000DB8  0E82               	movlw	130
  3577  000DBA  2417               	addwf	??___flmul,w,c
  3578  000DBC  6E26               	movwf	___flmul@temp,c
  3579  000DBE  0EFF               	movlw	255
  3580  000DC0  2018               	addwfc	??___flmul+1,w,c
  3581  000DC2  6E27               	movwf	___flmul@temp+1,c
  3582  000DC4  D00F               	goto	l2177
  3583  000DC6                     l2171:
  3584  000DC6  90D8               	bcf	status,0,c
  3585  000DC8  3622               	rlcf	___flmul@prod,f,c
  3586  000DCA  3623               	rlcf	___flmul@prod+1,f,c
  3587  000DCC  3624               	rlcf	___flmul@prod+2,f,c
  3588  000DCE  3625               	rlcf	___flmul@prod+3,f,c
  3589  000DD0  BE1F               	btfsc	___flmul@grs+3,7,c
  3590  000DD2  8022               	bsf	___flmul@prod,0,c
  3591  000DD4  90D8               	bcf	status,0,c
  3592  000DD6  361C               	rlcf	___flmul@grs,f,c
  3593  000DD8  361D               	rlcf	___flmul@grs+1,f,c
  3594  000DDA  361E               	rlcf	___flmul@grs+2,f,c
  3595  000DDC  361F               	rlcf	___flmul@grs+3,f,c
  3596  000DDE  0626               	decf	___flmul@temp,f,c
  3597  000DE0  A0D8               	btfss	status,0,c
  3598  000DE2  0627               	decf	___flmul@temp+1,f,c
  3599  000DE4                     l2177:
  3600  000DE4  AE24               	btfss	___flmul@prod+2,7,c
  3601  000DE6  D7EF               	goto	l2171
  3602  000DE8  0E00               	movlw	0
  3603  000DEA  6E20               	movwf	___flmul@aexp,c
  3604  000DEC  AE1F               	btfss	___flmul@grs+3,7,c
  3605  000DEE  D017               	goto	l801
  3606  000DF0  0EFF               	movlw	255
  3607  000DF2  141C               	andwf	___flmul@grs,w,c
  3608  000DF4  6E17               	movwf	??___flmul& (0+255),c
  3609  000DF6  0EFF               	movlw	255
  3610  000DF8  141D               	andwf	___flmul@grs+1,w,c
  3611  000DFA  6E18               	movwf	(??___flmul+1)& (0+255),c
  3612  000DFC  0EFF               	movlw	255
  3613  000DFE  141E               	andwf	___flmul@grs+2,w,c
  3614  000E00  6E19               	movwf	(??___flmul+2)& (0+255),c
  3615  000E02  0E7F               	movlw	127
  3616  000E04  141F               	andwf	___flmul@grs+3,w,c
  3617  000E06  6E1A               	movwf	(??___flmul+3)& (0+255),c
  3618  000E08  5017               	movf	??___flmul,w,c
  3619  000E0A  1018               	iorwf	??___flmul+1,w,c
  3620  000E0C  1019               	iorwf	??___flmul+2,w,c
  3621  000E0E  101A               	iorwf	??___flmul+3,w,c
  3622  000E10  B4D8               	btfsc	status,2,c
  3623  000E12  D003               	goto	l802
  3624  000E14                     u1800:
  3625  000E14  0E01               	movlw	1
  3626  000E16  6E20               	movwf	___flmul@aexp,c
  3627  000E18  D002               	goto	l801
  3628  000E1A                     l802:
  3629  000E1A  B022               	btfsc	___flmul@prod,0,c
  3630  000E1C  D7FB               	goto	u1800
  3631  000E1E                     l801:
  3632  000E1E  5020               	movf	___flmul@aexp,w,c
  3633  000E20  B4D8               	btfsc	status,2,c
  3634  000E22  D01F               	goto	l2197
  3635  000E24  0E01               	movlw	1
  3636  000E26  2622               	addwf	___flmul@prod,f,c
  3637  000E28  0E00               	movlw	0
  3638  000E2A  2223               	addwfc	___flmul@prod+1,f,c
  3639  000E2C  2224               	addwfc	___flmul@prod+2,f,c
  3640  000E2E  2225               	addwfc	___flmul@prod+3,f,c
  3641  000E30  A025               	btfss	___flmul@prod+3,0,c
  3642  000E32  D017               	goto	l2197
  3643  000E34  C022  F017         	movff	___flmul@prod,??___flmul
  3644  000E38  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  3645  000E3C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  3646  000E40  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  3647  000E44  341A               	rlcf	??___flmul+3,w,c
  3648  000E46  321A               	rrcf	??___flmul+3,f,c
  3649  000E48  3219               	rrcf	??___flmul+2,f,c
  3650  000E4A  3218               	rrcf	??___flmul+1,f,c
  3651  000E4C  3217               	rrcf	??___flmul,f,c
  3652  000E4E  C017  F022         	movff	??___flmul,___flmul@prod
  3653  000E52  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  3654  000E56  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  3655  000E5A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  3656  000E5E  4A26               	infsnz	___flmul@temp,f,c
  3657  000E60  2A27               	incf	___flmul@temp+1,f,c
  3658  000E62                     l2197:
  3659  000E62  BE27               	btfsc	___flmul@temp+1,7,c
  3660  000E64  D00D               	goto	l2201
  3661  000E66  5027               	movf	___flmul@temp+1,w,c
  3662  000E68  E103               	bnz	u1840
  3663  000E6A  2826               	incf	___flmul@temp,w,c
  3664  000E6C  A0D8               	btfss	status,0,c
  3665  000E6E  D008               	goto	l2201
  3666  000E70                     u1840:
  3667  000E70  0E00               	movlw	0
  3668  000E72  6E22               	movwf	___flmul@prod,c
  3669  000E74  0E00               	movlw	0
  3670  000E76  6E23               	movwf	___flmul@prod+1,c
  3671  000E78  0E80               	movlw	128
  3672  000E7A  6E24               	movwf	___flmul@prod+2,c
  3673  000E7C  0E7F               	movlw	127
  3674  000E7E  D020               	goto	L4
  3675  000E80                     l2201:
  3676  000E80  BE27               	btfsc	___flmul@temp+1,7,c
  3677  000E82  D005               	goto	u1850
  3678  000E84  5027               	movf	___flmul@temp+1,w,c
  3679  000E86  E10E               	bnz	l809
  3680  000E88  0426               	decf	___flmul@temp,w,c
  3681  000E8A  B0D8               	btfsc	status,0,c
  3682  000E8C  D00B               	goto	l809
  3683  000E8E                     u1850:
  3684  000E8E  0E00               	movlw	0
  3685  000E90  6E22               	movwf	___flmul@prod,c
  3686  000E92  0E00               	movlw	0
  3687  000E94  6E23               	movwf	___flmul@prod+1,c
  3688  000E96  0E00               	movlw	0
  3689  000E98  6E24               	movwf	___flmul@prod+2,c
  3690  000E9A  0E00               	movlw	0
  3691  000E9C  6E25               	movwf	___flmul@prod+3,c
  3692  000E9E  0E00               	movlw	0
  3693  000EA0  6E1B               	movwf	___flmul@sign,c
  3694  000EA2  D00F               	goto	l2213
  3695  000EA4                     l809:
  3696  000EA4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  3697  000EA8  0EFF               	movlw	255
  3698  000EAA  1622               	andwf	___flmul@prod,f,c
  3699  000EAC  0EFF               	movlw	255
  3700  000EAE  1623               	andwf	___flmul@prod+1,f,c
  3701  000EB0  0E7F               	movlw	127
  3702  000EB2  1624               	andwf	___flmul@prod+2,f,c
  3703  000EB4  0E00               	movlw	0
  3704  000EB6  1625               	andwf	___flmul@prod+3,f,c
  3705  000EB8  B021               	btfsc	___flmul@bexp,0,c
  3706  000EBA  8E24               	bsf	___flmul@prod+2,7,c
  3707  000EBC  90D8               	bcf	status,0,c
  3708  000EBE  3021               	rrcf	___flmul@bexp,w,c
  3709  000EC0                     L4:
  3710  000EC0  6E25               	movwf	___flmul@prod+3,c
  3711  000EC2                     l2213:
  3712  000EC2  501B               	movf	___flmul@sign,w,c
  3713  000EC4  1225               	iorwf	___flmul@prod+3,f,c
  3714  000EC6  C022  F00F         	movff	___flmul@prod,?___flmul
  3715  000ECA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  3716  000ECE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  3717  000ED2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  3718  000ED6  0012               	return		;funcret
  3719  000ED8                     __end_of___flmul:
  3720                           	opt callstack 0
  3721                           
  3722 ;; *************** function ___flge *****************
  3723 ;; Defined at:
  3724 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  ff1             4    0[COMRAM] unsigned char 
  3727 ;;  ff2             4    4[COMRAM] unsigned char 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;		None               void
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3739 ;;      Params:         8       0       0       0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0
  3741 ;;      Temps:          4       0       0       0       0       0       0
  3742 ;;      Totals:        12       0       0       0       0       0       0
  3743 ;;Total ram usage:       12 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text19
  3753  001498                     __ptext19:
  3754                           	opt callstack 0
  3755  001498                     ___flge:
  3756                           	opt callstack 30
  3757                           
  3758                           ;incstack = 0
  3759  001498  0E00               	movlw	0
  3760  00149A  1401               	andwf	___flge@ff1,w,c
  3761  00149C  6E09               	movwf	??___flge& (0+255),c
  3762  00149E  0E00               	movlw	0
  3763  0014A0  1402               	andwf	___flge@ff1+1,w,c
  3764  0014A2  6E0A               	movwf	(??___flge+1)& (0+255),c
  3765  0014A4  0E80               	movlw	128
  3766  0014A6  1403               	andwf	___flge@ff1+2,w,c
  3767  0014A8  6E0B               	movwf	(??___flge+2)& (0+255),c
  3768  0014AA  0E7F               	movlw	127
  3769  0014AC  1404               	andwf	___flge@ff1+3,w,c
  3770  0014AE  6E0C               	movwf	(??___flge+3)& (0+255),c
  3771  0014B0  5009               	movf	??___flge,w,c
  3772  0014B2  100A               	iorwf	??___flge+1,w,c
  3773  0014B4  100B               	iorwf	??___flge+2,w,c
  3774  0014B6  100C               	iorwf	??___flge+3,w,c
  3775  0014B8  A4D8               	btfss	status,2,c
  3776  0014BA  D008               	goto	l2229
  3777  0014BC  0E00               	movlw	0
  3778  0014BE  6E01               	movwf	___flge@ff1,c
  3779  0014C0  0E00               	movlw	0
  3780  0014C2  6E02               	movwf	___flge@ff1+1,c
  3781  0014C4  0E00               	movlw	0
  3782  0014C6  6E03               	movwf	___flge@ff1+2,c
  3783  0014C8  0E00               	movlw	0
  3784  0014CA  6E04               	movwf	___flge@ff1+3,c
  3785  0014CC                     l2229:
  3786  0014CC  0E00               	movlw	0
  3787  0014CE  1405               	andwf	___flge@ff2,w,c
  3788  0014D0  6E09               	movwf	??___flge& (0+255),c
  3789  0014D2  0E00               	movlw	0
  3790  0014D4  1406               	andwf	___flge@ff2+1,w,c
  3791  0014D6  6E0A               	movwf	(??___flge+1)& (0+255),c
  3792  0014D8  0E80               	movlw	128
  3793  0014DA  1407               	andwf	___flge@ff2+2,w,c
  3794  0014DC  6E0B               	movwf	(??___flge+2)& (0+255),c
  3795  0014DE  0E7F               	movlw	127
  3796  0014E0  1408               	andwf	___flge@ff2+3,w,c
  3797  0014E2  6E0C               	movwf	(??___flge+3)& (0+255),c
  3798  0014E4  5009               	movf	??___flge,w,c
  3799  0014E6  100A               	iorwf	??___flge+1,w,c
  3800  0014E8  100B               	iorwf	??___flge+2,w,c
  3801  0014EA  100C               	iorwf	??___flge+3,w,c
  3802  0014EC  A4D8               	btfss	status,2,c
  3803  0014EE  D008               	goto	l2233
  3804  0014F0  0E00               	movlw	0
  3805  0014F2  6E05               	movwf	___flge@ff2,c
  3806  0014F4  0E00               	movlw	0
  3807  0014F6  6E06               	movwf	___flge@ff2+1,c
  3808  0014F8  0E00               	movlw	0
  3809  0014FA  6E07               	movwf	___flge@ff2+2,c
  3810  0014FC  0E00               	movlw	0
  3811  0014FE  6E08               	movwf	___flge@ff2+3,c
  3812  001500                     l2233:
  3813  001500  AE04               	btfss	___flge@ff1+3,7,c
  3814  001502  D009               	goto	l2237
  3815  001504  6C01               	negf	___flge@ff1,c
  3816  001506  1E02               	comf	___flge@ff1+1,f,c
  3817  001508  B0D8               	btfsc	status,0,c
  3818  00150A  2A02               	incf	___flge@ff1+1,f,c
  3819  00150C  1E03               	comf	___flge@ff1+2,f,c
  3820  00150E  B0D8               	btfsc	status,0,c
  3821  001510  2A03               	incf	___flge@ff1+2,f,c
  3822  001512  0E80               	movlw	128
  3823  001514  5604               	subfwb	___flge@ff1+3,f,c
  3824  001516                     l2237:
  3825  001516  AE08               	btfss	___flge@ff2+3,7,c
  3826  001518  D009               	goto	l443
  3827  00151A  6C05               	negf	___flge@ff2,c
  3828  00151C  1E06               	comf	___flge@ff2+1,f,c
  3829  00151E  B0D8               	btfsc	status,0,c
  3830  001520  2A06               	incf	___flge@ff2+1,f,c
  3831  001522  1E07               	comf	___flge@ff2+2,f,c
  3832  001524  B0D8               	btfsc	status,0,c
  3833  001526  2A07               	incf	___flge@ff2+2,f,c
  3834  001528  0E80               	movlw	128
  3835  00152A  5608               	subfwb	___flge@ff2+3,f,c
  3836  00152C                     l443:
  3837  00152C  0E00               	movlw	0
  3838  00152E  1A01               	xorwf	___flge@ff1,f,c
  3839  001530  0E00               	movlw	0
  3840  001532  1A02               	xorwf	___flge@ff1+1,f,c
  3841  001534  0E00               	movlw	0
  3842  001536  1A03               	xorwf	___flge@ff1+2,f,c
  3843  001538  0E80               	movlw	128
  3844  00153A  1A04               	xorwf	___flge@ff1+3,f,c
  3845  00153C  0E00               	movlw	0
  3846  00153E  1A05               	xorwf	___flge@ff2,f,c
  3847  001540  0E00               	movlw	0
  3848  001542  1A06               	xorwf	___flge@ff2+1,f,c
  3849  001544  0E00               	movlw	0
  3850  001546  1A07               	xorwf	___flge@ff2+2,f,c
  3851  001548  0E80               	movlw	128
  3852  00154A  1A08               	xorwf	___flge@ff2+3,f,c
  3853  00154C  5005               	movf	___flge@ff2,w,c
  3854  00154E  5C01               	subwf	___flge@ff1,w,c
  3855  001550  5006               	movf	___flge@ff2+1,w,c
  3856  001552  5802               	subwfb	___flge@ff1+1,w,c
  3857  001554  5007               	movf	___flge@ff2+2,w,c
  3858  001556  5803               	subwfb	___flge@ff1+2,w,c
  3859  001558  5008               	movf	___flge@ff2+3,w,c
  3860  00155A  5804               	subwfb	___flge@ff1+3,w,c
  3861  00155C  B0D8               	btfsc	status,0,c
  3862  00155E  D002               	goto	l2243
  3863  001560  90D8               	bcf	status,0,c
  3864  001562  0012               	return	
  3865  001564                     l2243:
  3866  001564  80D8               	bsf	status,0,c
  3867  001566  0012               	return		;funcret
  3868  001568                     __end_of___flge:
  3869                           	opt callstack 0
  3870                           
  3871                           	psect	rparam
  3872  0000                     tosu	equ	0xFFF
  3873                           tosh	equ	0xFFE
  3874                           tosl	equ	0xFFD
  3875                           stkptr	equ	0xFFC
  3876                           pclatu	equ	0xFFB
  3877                           pclath	equ	0xFFA
  3878                           pcl	equ	0xFF9
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           indf0	equ	0xFEF
  3886                           postinc0	equ	0xFEE
  3887                           postdec0	equ	0xFED
  3888                           preinc0	equ	0xFEC
  3889                           plusw0	equ	0xFEB
  3890                           fsr0h	equ	0xFEA
  3891                           fsr0l	equ	0xFE9
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postinc1	equ	0xFE6
  3895                           postdec1	equ	0xFE5
  3896                           preinc1	equ	0xFE4
  3897                           plusw1	equ	0xFE3
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           bsr	equ	0xFE0
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           preinc2	equ	0xFDC
  3905                           plusw2	equ	0xFDB
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8


Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     83     103
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_puts@str	PTR unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[6]), STR_12(CODE[14]), STR_11(CODE[6]), STR_10(CODE[14]), 
		 -> STR_9(CODE[6]), STR_8(CODE[2]), STR_7(CODE[14]), STR_6(CODE[6]), 
		 -> STR_5(CODE[2]), STR_4(CODE[14]), STR_3(CODE[17]), STR_2(CODE[17]), 
		 -> STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _main->_lcd_bcd
    _lcd_puts->_lcd_data
    _lcd_init->_lcd_com
    _lcd_init_write->_delay
    _lcd_bcd->___fltol
    _lcd_data->_lcd_com
    _lcd_com->_delay
    ___fltol->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   19318
                                             61 COMRAM    22    22      0
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _lcd_bcd
                            _lcd_com
                           _lcd_data
                           _lcd_init
                           _lcd_puts
                           _ow_reset
                          _read_byte
                         _write_byte
 ---------------------------------------------------------------------------------
 (1) _write_byte                                           4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _read_byte                                            4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ow_reset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             6     4      2    2227
                                              7 COMRAM     6     4      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3219
                              _delay
                            _lcd_com
                     _lcd_init_write
 ---------------------------------------------------------------------------------
 (2) _lcd_init_write                                       1     1      0    1057
                                              4 COMRAM     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             13    11      2    3661
                                             49 COMRAM    12    10      2
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0    1149
                                              6 COMRAM     1     1      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (3) _lcd_com                                              2     2      0    1127
                                              4 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                4     2      2    1035
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     609
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3041
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
   ___flmul
     ___xxtofl (ARG)
   ___flsub
     ___fladd
   ___fltol
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _lcd_bcd
     ___fltol (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
     _lcd_data (ARG)
       _lcd_com
         _delay
   _lcd_com
     _delay
   _lcd_data
     _lcd_com
       _delay
   _lcd_init
     _delay
     _lcd_com
       _delay
     _lcd_init_write
       _delay
   _lcd_puts
     _lcd_data
       _lcd_com
         _delay
   _ow_reset
   _read_byte
   _write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     53      67       1       81.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      15        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 03 20:31:50 2019

            lcd_com@temp 0006                       l33 183C                       l45 178C  
                     l65 16BC                       l66 16BE      ___wmul@multiplicand 0003  
                    l443 152C                      l801 0E1E                      l802 0E1A  
                    l723 10EC                      l707 101A                      l732 1152  
                    l708 0FF8                      l733 114E                      l840 1414  
                    l809 0EA4                      l833 1396                      l669 174C  
                    l679 18AC                      l792 0C06                      u504 185A  
                    u505 1856                      u524 176E                      u525 176A  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           __CFG_LVP$OFF 000000             ___fltol@exp1 0031             __CFG_WDT$OFF 000000  
                   l2101 0BB2                     l2013 171A                     l2103 0BB6  
                   l2015 1722                     l2201 0E80                     l2121 0BF6  
                   l2105 0BC6                     l2025 1742                     l2041 18A2  
                   l2033 1882                     l1153 18DA                     l2035 188A  
                   l2213 0EC2                     l2053 17CC                     l2119 0BF2  
                   l2303 13C4                     l1167 1862                     l1183 175E  
                   l2233 1500                     l2129 0C24                     l2305 13CA  
                   l2081 1328                     l2049 17AC                     l1193 1798  
                   l2243 1564                     l2171 0DC6                     l2315 143A  
                   l2307 13D6                     l2403 0678                     l2237 1516  
                   l2229 14CC                     l2253 1586                     l2333 1486  
                   l2317 1446                     l2309 13FC                     l2079 1300  
                   l2177 0DE4                     l2281 15F4                     l2273 15E0  
                   l2505 09AE                     l2409 069C                     l2531 0B38  
                   l2197 0E62                     l1821 0F08                     l2269 15D0  
                   l2429 06DE                     l1911 103E                     l2287 1610  
                   l2279 15E8                     l1921 1064                     l1841 0F4C  
                   l1817 0F04                     l2297 13A6                     l1761 1922  
                   l1853 0F70                     l1845 0F50                     l2493 0954  
                   l1919 1060                     l1759 191E                     l1929 1076  
                   l1947 1110                     l1963 1130                     l1939 10DC  
                   l1883 0FAC                     l1957 1126                     l1991 11BE  
                   l1983 1198                     l1895 1006                     l1897 100A  
                   l1995 11C6                     l1997 11C8                     STR_1 0601  
                   STR_2 0624                     STR_3 0613                     STR_4 0635  
                   STR_5 0649                     STR_6 0643                     STR_7 0635  
                   STR_8 0649                     STR_9 0643                     u1300 0FE0  
                   u1330 1022                     u2050 1450                     u2207 06F2  
                   u1280 0FCE                     u2217 1786                     u1290 0FDE  
                   u2170 08EA                     u2227 1792                     u1540 11A4  
                   u1460 1134                     u1620 188E                     u2237 1864  
                   u2190 0ADA                     u2247 18BC                     u1800 0E14  
                   u1480 1148                     u2257 18C6                     u1651 11EA  
                   u2267 18D0                     u2277 18DC                     u1750 0C12  
                   u1590 1726                     u1840 0E70                     u1760 0D88  
                   u1920 1574                     u1850 0E8E                     u1930 15A4  
                   u1765 0D7E                     u1935 159A                     u1970 15FA  
                   _main 064C            write_byte@val 0003              lcd_puts@str 0008  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000            ___fltol@sign1 0030          __end_of___fladd 11E4  
                  ?_main 0001                    STR_10 0635                    STR_11 0643  
                  STR_12 0635                    STR_13 0643          __end_of___flmul 0ED8  
        __end_of___flsub 1832          __end_of___fltol 1622          __end_of___lwdiv 1756  
        __end_of___lwmod 18B6                    _PORTD 000F83                    _TRISD 000F95  
        __end_of_lcd_bcd 1358          __end_of_lcd_com 1704                    _delay 190C  
                  main@i 0050                    main@t 004E                    tablat 000FF5  
                  status 000FD8          __initialization 194C             __end_of_main 0B86  
                 ??_main 003E            __activetblptr 000001                   ?_delay 0001  
       __end_of___xxtofl 1498         __end_of_lcd_data 197A         __end_of_lcd_init 16A8  
                 ___flge 1498         __end_of_lcd_puts 17EC                ??___fladd 0009  
                 ___wmul 18E6                ??___flmul 0017                ??___flsub 0019  
              ??___fltol 002C                ??___lwdiv 0005                ??___lwmod 0005  
                 delay@i 0003                   delay@j 0001                   clear_0 1952  
                 main@t2 004C                ??_lcd_bcd 0034                   _status 0066  
              ??_lcd_com 0005             __mediumconst 0000         __end_of_ow_reset 18E6  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       ??_lcd_init_write 0005               ___flge@ff1 0001               ___flge@ff2 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             __accesstop 0080  __end_of__initialization 1958          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001               ___fltol@f1 0028           __pcstackCOMRAM 0001  
          __end_of_delay 1930                  ??_delay 0003       __size_of_read_byte 0042  
                ?___flge 0001                  ?___wmul 0001                ?___xxtofl 0001  
              ?_lcd_data 0001                ?_lcd_init 0001                ?_lcd_puts 0008  
                __Hparam 0000                  __Lparam 0000                ?_ow_reset 0001  
        __size_of___flge 00D0                  ___fladd 0ED8                  ___flmul 0B86  
                ___flsub 17EC                  ___fltol 1568          __size_of___wmul 0026  
                ___lwdiv 1704                  ___lwmod 1874             __psmallconst 0600  
                __pcinit 194C                  _aft_val 005E                  __ramtop 0600  
                __ptext0 064C                  __ptext1 1756                  __ptext2 1832  
                __ptext3 18B6                  __ptext4 17A2                  __ptext5 1622  
                __ptext6 1930                  __ptext7 11E4                  __ptext8 1966  
                __ptext9 16A8                  _lcd_bcd 11E4                  _lcd_com 16A8  
             ??___xxtofl 0005        __end_of_read_byte 1874                  _pre_val 0062  
             ??_lcd_data 0007               ??_lcd_init 0007               ??_lcd_puts 000A  
   end_of_initialization 1958        lcd_bcd@ui_decimal 0034               ??_ow_reset 0001  
                postinc0 000FEE                  postinc2 000FDE                _PORTBbits 000F81  
              _PORTCbits 000F82              ___fladd@grs 0010            ___xxtofl@sign 0009  
              _TRISBbits 000F93                _TRISCbits 000F94              ___flmul@grs 001C  
        lcd_init_write@a 0005           __end_of___flge 1568           __end_of___wmul 190C  
             _write_byte 1756      start_initialization 194C         __CFG_OSC$INTIO67 000000  
        main@difference1 0040          main@difference2 0044                 ??___flge 0009  
               ??___wmul 0005               read_byte@i 0004                ___fladd@a 0005  
              ___fladd@b 0001                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 0054                ___flsub@a 0015                ___flsub@b 0011  
      __size_of___xxtofl 0140        __size_of_lcd_data 0014        __size_of_lcd_init 0086  
      __size_of_lcd_puts 004A         ___lwdiv@dividend 0001  __size_of_lcd_init_write 001C  
               ?___fladd 0001                 ?___flmul 000F                 ?___flsub 0011  
               ?___fltol 0028                 ?___lwdiv 0001                 ?___lwmod 0001  
      __size_of_ow_reset 0030              ?_write_byte 0001                 ?_lcd_bcd 0032  
               ?_lcd_com 0001              __smallconst 0600         ___lwdiv@quotient 0005  
         __size_of_delay 0024                _read_byte 1832           ___wmul@product 0005  
       lcd_bcd@ui_number 0032                lcd_data@a 0007        ___wmul@multiplier 0001  
              main@TempH 004A                main@TempL 0048              write_byte@i 0004  
              lcd_puts@i 000C               ?_read_byte 0001      __size_of_write_byte 004C  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
        read_byte@result 0003         __size_of___fladd 030C         __size_of___flmul 0352  
       __size_of___flsub 0046         __size_of___fltol 00BA         __size_of___lwdiv 0052  
       __size_of___lwmod 0042         __size_of_lcd_bcd 0174         __size_of_lcd_com 005C  
               ___xxtofl 1358          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 190C                 __ptext11 1874                 __ptext12 1704  
               __ptext13 1358                 __ptext14 18E6                 __ptext15 1568  
               __ptext16 17EC                 __ptext17 0ED8                 __ptext18 0B86  
               __ptext19 1498                 _lcd_data 1966                 _lcd_init 1622  
               _lcd_puts 17A2            __size_of_main 053A          lcd_bcd@uc_digit 0001  
         _lcd_init_write 1930                 _ow_reset 18B6                 lcd_com@a 0005  
             _INTCONbits 000FF2              ??_read_byte 0001         ___lwmod@dividend 0001  
 __end_of_lcd_init_write 194C               _OSCCONbits 000FD3             ??_write_byte 0001  
           lcd_bcd@F2566 0054          ___lwmod@divisor 0003          ___lwmod@counter 0005  
          ___fladd@signs 000D             ___fladd@aexp 000E             ___fladd@bexp 000F  
        ?_lcd_init_write 0001       __end_of_write_byte 17A2  
